{"version":3,"sources":["shared/components/button.component.tsx","components/navigation/mainNavBar.tsx","components/toastify/toastify.tsx","shared/fetch.service.tsx","shared/components/spinner.component.tsx","components/booking/subcomponents/bookingItem/bookingItem.tsx","components/booking/subcomponents/bookingList.tsx","components/booking/booking.tsx","shared/components/modal.component.tsx","shared/components/input.component.tsx","shared/components/date-time-picker.component.tsx","components/event/subcomponents/eventList/eventItem/eventItem.tsx","components/event/subcomponents/eventList/eventList.tsx","components/event/event.tsx","components/auth/auth.tsx","app/Router.tsx","app/App.tsx","index.tsx"],"names":["customStyles","makeStyles","root","font","textDecoration","default","primary","secondary","background","blueGrey","&:hover","backgroundColor","&:active","&.active","CustomButton","props","colorStyles","classes","color","react_default","a","createElement","Button","Object","assign","contained","text","outlined","children","theme","flexGrow","menuButton","title","MainNavBar","_React$useState","React","useState","_React$useState2","slicedToArray","anchorEl","setAnchorEl","handleClose","appState","switchRegisterLogin","logout","_appState$navigation","navigation","isAtLogin","isAtRegister","isAuth","auth","token","length","AppBar","position","className","id","Toolbar","IconButton","edge","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu_default","Menu_Menu","keepMounted","open","Boolean","onClose","MenuItem","react_router_dom","to","size","type","variant","Typography","align","Toastify","react_toastify","containerId","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","transition","Slide","FetchService","reqBody","headers","Content-Type","Authorization","Error","fetch","SERVER_URL","method","body","JSON","stringify","res","json","response","console","log","_context","t0","process","CustomSpinner","CircularProgress","BookingItem","_id","booking","price","Date","date","toDateString","cancelBooking","disabled","isCancelingBooking","BookingList","bookings","map","bookingItem_BookingItem","key","Booking","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initialState","isFetchingBookings","fetchBookings","setState","state","asyncToGenerator","regenerator_default","mark","_callee","requestBody","bookingsObj","wrap","prev","next","query","concat","fetchServer","sent","errors","toast","error","abrupt","data","stop","bookingId","_callee2","_context2","success","filter","updateNavigation","isAtBookings","isAtEvents","isAtUsers","Fade","timeout","in","bookingList_BookingList","Component","CustomModalDialog","isOpenModal","openModalButton","Dialog","modalId","onCloseModal","aria-labelledby","DialogTitle","modalTitle","DialogContent","DialogActions","canCancel","cancelModalButton","canConfirm","confirmModalButton","CustomInputTextField","TextField","inputProps","maxLength","CustomDateTimePicker","MuiPickersUtilsProvider","utils","DateFnsUtils","DateTimePicker","EventItem","_props$event","creator","userId","selectedEventForBooking","eventBooking","isOpenEventBookingModal","closeEventModal","openBookEventModal","isBookingEvent","handleEventBooking","createdAt","description","EventList","events","eventItem_EventItem","eventBookings","Event","createEventInput","toISOString","createdEvents","email","password","username","isOpenEventCreationModal","isCreatingEvent","isFetchingEvents","initState","fetchEvents","eventsObj","onTitleInputChange","persist","target","objectSpread","value","onPriceInputChange","onDescriptionInputChange","onDateInputChange","createEvent","_ref2","eventInput","updatedEvents","toConsumableArray","push","_x","apply","arguments","handleEventCreation","_callee4","_context4","_callee3","_context3","trim","isValidEventInput","t1","openCreateEventModal","eventId","selectedEvent","find","e","_callee5","_context5","userInput","autoComplete","onChange","label","name","margin","inputVariant","multiline","rows","eventList_EventList","Auth","tokenExpiration","isHandlingAuth","isLoggingWithToken","getTokenFromLocalStorage","window","localStorage","getItem","onEmailInputChange","onPasswordInputChange","register","_ref","user","registerUser","login","_ref3","saveAuthTokenInLocalStorage","authUser","_x2","loginWithToken","_ref4","tokenInput","_x3","setItem","handleAuthUser","_ref5","_callee6","_context6","preventDefault","isValidUserInput","_x4","_this2","_callee7","_context7","thickness","onSubmit","Router","toastify_Toastify","react_router","from","exact","path","render","components_auth_auth","Fragment","components_event_event","components_booking_booking","App","switchAuthModeChange","removeAuthTokenInLocalStorage","removeItem","logoutUser","app_Router","ReactDOM","src_app_App","document","getElementById"],"mappings":"wkBAyBMA,EAAeC,YAAW,CAE9BC,KAAM,CACJC,KAAM,UACNC,eAAgB,QAGlBC,QAAS,GAETC,QAAS,GAETC,UAAW,CACTC,WAAYC,IAAS,KACrBC,UAAW,CACTC,gBAAiBF,IAAS,MAE5BG,WAAY,CACVD,gBAAiBF,IAAS,MAE5BI,WAAY,CACVF,gBAAiBF,IAAS,SAKzB,SAASK,EAAaC,GAC3B,IAGIC,EAHEC,EAAUjB,IAIhB,OAAQe,EAAMG,OACZ,IAAK,UACHF,EAAcC,EAAQX,QACtB,MACF,IAAK,YACHU,EAAcC,EAAQV,UACtB,MACF,QACES,EAAcC,EAAQZ,QAI1B,OACEc,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMT,EADN,CAEEE,QAAS,CACPf,KAAMe,EAAQf,KACduB,UAAWT,EACXU,KAAMV,EACNW,SAAUX,KAGXD,EAAMa,qBC7DP5B,EAAeC,YAAW,SAAA4B,GAAK,MAAK,CACxC3B,KAAM,CACJ4B,SAAU,GAEZC,WAAY,GACZC,MAAO,CACLF,SAAU,MAIC,SAASG,EAAWlB,GAAyB,IAAAmB,EAC1BC,IAAMC,SAA6B,MADTC,EAAAd,OAAAe,EAAA,EAAAf,CAAAW,EAAA,GACnDK,EADmDF,EAAA,GACzCG,EADyCH,EAAA,GAM1D,SAASI,IACPD,EAAY,MAP4C,IAUlDE,EAA0C3B,EAA1C2B,SAAUC,EAAgC5B,EAAhC4B,oBAAqBC,EAAW7B,EAAX6B,OAVmBC,EAWtBH,EAASI,WAArCC,EAXkDF,EAWlDE,UAAWC,EAXuCH,EAWvCG,aACbC,EAAkBP,EAASQ,KAAKC,MAAMC,OAAS,EAE/CnC,EAAUjB,IAEhB,OACEmB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAWtC,EAAQf,KAAMsD,GAAG,cACpDrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACEF,GAAG,uBACHG,KAAK,QACLJ,UAAWtC,EAAQc,WACnBb,MAAM,UACN0C,aAAW,OACXC,gBAAc,aACdC,gBAAc,OACdC,QAzBR,SAAqBC,GACnBxB,EAAYwB,EAAMC,iBA0BZ9C,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,OAGFD,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACEX,GAAG,aACHjB,SAAUA,EACV6B,aAAW,EACXC,KAAMC,QAAQ/B,GACdgC,QAAS9B,GAERQ,GACC9B,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAUT,QAAStB,GACjBtB,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAASC,GAAG,WACVvD,EAAAC,EAAAC,cAACP,EAAD,CACE6D,KAAK,QACLC,KAAK,SACLC,QAAQ,OACR3D,MAAM,WAJR,YAWL+B,GACC9B,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAUT,QAAStB,GACjBtB,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAASC,GAAG,aACVvD,EAAAC,EAAAC,cAACP,EAAD,CACE6D,KAAK,QACLC,KAAK,SACLC,QAAQ,OACR3D,MAAM,WAJR,cAWL+B,GACC9B,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAUT,QAAStB,GACjBtB,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAASC,GAAG,SACVvD,EAAAC,EAAAC,cAACP,EAAD,CACEiD,QAASnB,EACT+B,KAAK,QACLC,KAAK,SACLC,QAAQ,OACR3D,MAAM,WALR,aAaJ+B,GACA9B,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAUT,QAAStB,GACjBtB,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAASC,GAAG,SACVvD,EAAAC,EAAAC,cAACP,EAAD,CACEiD,QAASpB,EACTgC,KAAK,QACLC,KAAK,SACLC,QAAQ,OACR3D,MAAM,WAEL6B,GAAa,WACbC,GAAgB,YAO3B7B,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYC,MAAM,OAAOF,QAAQ,KAAKtB,UAAWtC,EAAQe,OACvDb,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAASC,GAAG,KAAZ,WAEFvD,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,uBACbpC,EAAAC,EAAAC,cAAA,MAAIkC,UAAU,sBACVN,GACA9B,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAASlB,UAAU,OAAOmB,GAAG,SAC3BvD,EAAAC,EAAAC,cAACP,EAAD,CACEiD,QAASpB,EACTgC,KAAK,QACLC,KAAK,SACLC,QAAQ,YACR3D,MAAM,WAEL6B,GAAa,WACbC,GAAgB,UAKtBC,GACC9B,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAASC,GAAG,WACVvD,EAAAC,EAAAC,cAACP,EAAD,CACE6D,KAAK,QACLC,KAAK,SACLC,QAAQ,YACR3D,MAAM,WAJR,WAUH+B,GACC9B,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAASC,GAAG,aACVvD,EAAAC,EAAAC,cAACP,EAAD,CACE6D,KAAK,QACLC,KAAK,SACLC,QAAQ,YACR3D,MAAM,WAJR,aAUH+B,GACC9B,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAASlB,UAAU,OAAOmB,GAAG,SAC3BvD,EAAAC,EAAAC,cAACP,EAAD,CACEiD,QAASnB,EACT+B,KAAK,QACLC,KAAK,SACLC,QAAQ,YACR3D,MAAM,WALR,mCCxKH8D,iBAAW,WAQtB,OACE7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CACEC,YARgB,gBAShB5B,SAPa,YAQb6B,UANmB,KAOnBC,iBAAe,EACfC,aAAW,EACXC,cAAY,EACZC,KAAK,EACLC,WAAS,EACTC,cAAY,EACZC,WAAYC,gCCjBGC,mJAOjBC,EACA1C,gFAEI2C,EAAU,CACZC,eAAgB,mBAChBC,cAAe,cAIX7C,wBACEA,EAAMC,OAAS,yBACX,IAAI6C,MAAM,oCAEhBH,EAAQE,cAAgB,UAAY7C,wCAG/B2C,EAAQE,uCAGCE,MAAMN,EAAaO,WAAY,CAC/CC,OAAQ,OACRC,KAAMC,KAAKC,UAAUV,GACrBC,2BAHIU,mBAM4BA,EAAIC,sBAAhCC,2BAECA,2CAEPC,QAAQC,IAARC,EAAAC,iIApCelB,EACJO,WACXY,kECGC,SAASC,EAAcjG,GAC5B,OAAOI,EAAAC,EAAAC,cAAC4F,EAAA,EAAqBlG,gBCJlBmG,UAAc,SAACnG,GAKtB,IACIoG,EAAQpG,EAAMqG,QAAdD,IACAnD,EAAUjD,EAAMqG,QAAhBpD,MAQR,OACE7C,EAAAC,EAAAC,cAAA,MAAIkC,UAAU,qBACZpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,qBACbpC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYvB,UAAU,cAAcsB,QAAQ,KAAK3D,MAAM,eACpD8C,EAAMhC,OAETb,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,gBACbpC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACEvB,UAAU,cACVsB,QAAQ,YACR3D,MAAM,iBAHR,IAKI8C,EAAMqD,OAEVlG,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACEvB,UAAU,aACVsB,QAAQ,YACR3D,MAAM,iBAEL,IAAIoG,KAAKtD,EAAMuD,MAAMC,kBAI5BrG,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,mBACbpC,EAAAC,EAAAC,cAACP,EAAD,CACE8D,KAAK,SACL1D,MAAM,UACN2D,QAAQ,WACRF,KAAK,QACLZ,QAnCoB,WAC1B,GAAIoD,EACF,OAAOpG,EAAM0G,cAAcN,IAkCvBO,SAAU3G,EAAM4G,oBANlB,cCxCKC,UAAc,SAAC7G,GAM1B,IAAM8G,EAAW9G,EAAM8G,SAEvB,OACEA,GACE1G,EAAAC,EAAAC,cAAA,MAAIkC,UAAU,gBACXsE,EAASC,IAAI,SAACV,GACb,OACEjG,EAAAC,EAAAC,cAAC0G,EAAD,CACEC,IAAKZ,EAAQD,IACbC,QAASA,EACT1E,SAAU3B,EAAM2B,SAChB+E,cAAe1G,EAAM0G,cACrBE,mBAAoB5G,EAAM4G,0BCsLzBM,sBA5Lb,SAAAA,EAAYlH,GAAsB,IAAAmH,EAAA,OAAA3G,OAAA4G,EAAA,EAAA5G,CAAA6G,KAAAH,IAChCC,EAAA3G,OAAA8G,EAAA,EAAA9G,CAAA6G,KAAA7G,OAAA+G,EAAA,EAAA/G,CAAA0G,GAAAM,KAAAH,KAAMrH,KAPRyH,aAA8B,CAC5BX,SAAU,GACVY,oBAAoB,EACpBd,oBAAoB,GAGYO,EAqBlCQ,cAAgB,WACdR,EAAKS,SACH,SAACC,GACC,MAAO,CACLH,oBAAoB,IAH1BlH,OAAAsH,EAAA,EAAAtH,CAAAuH,EAAA1H,EAAA2H,KAME,SAAAC,IAAA,IAAAC,EAAA9F,EAAAuD,EAAAwC,EAAA,OAAAJ,EAAA1H,EAAA+H,KAAA,SAAAtC,GAAA,cAAAA,EAAAuC,KAAAvC,EAAAwC,MAAA,oOAkBQJ,EAAc,CAClBK,MAAK,yCAAAC,OAnBT,uNAmBS,0BAnBT1C,EAAAuC,KAAA,EA2BUjG,EAAQ+E,EAAKnH,MAAM2B,SAASQ,KAAKC,MA3B3C0D,EAAAwC,KAAA,EA4B2BzD,EAAa4D,YAAYP,EAAa9F,GA5BjE,YA4BUuD,EA5BVG,EAAA4C,MA8BiBC,OA9BjB,CAAA7C,EAAAwC,KAAA,gBA+BMM,IAAMC,MAAM,sCA/BlB/C,EAAAgD,OAAA,qBAoCUX,EAAwCxC,EAASoD,KApC3D,CAAAjD,EAAAwC,KAAA,eAuCY,IAAIpD,MAAM,6CAvCtB,eAAAY,EAAAgD,OAAA,SA0CW3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLH,oBAAoB,EACpBZ,SAAUqB,EAAYrB,aA7C9B,eAAAhB,EAAAuC,KAAA,GAAAvC,EAAAC,GAAAD,EAAA,SAiDI8C,IAAMC,MAAM,mCAjDhB/C,EAAAgD,OAAA,SAmDW3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLH,oBAAoB,MArD5B,yBAAA5B,EAAAkD,SAAAf,EAAA,oBA5B8Bd,EA0FlCT,cAAgB,SAACuC,GACf9B,EAAKS,SACH,SAACC,GACC,MAAO,CACLjB,oBAAoB,IAH1BpG,OAAAsH,EAAA,EAAAtH,CAAAuH,EAAA1H,EAAA2H,KAME,SAAAkB,IAAA,IAAAhB,EAAA9F,EAAAuD,EAAA,OAAAoC,EAAA1H,EAAA+H,KAAA,SAAAe,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,uDAOQJ,EAAc,CAClBK,MAAK,6DAAAC,OAEuBS,EAFvB,kBAAAT,OART,0CAQS,0BARTW,EAAAd,KAAA,EAiBUjG,EAAQ+E,EAAKnH,MAAM2B,SAASQ,KAAKC,MAjB3C+G,EAAAb,KAAA,EAkB2BzD,EAAa4D,YAAYP,EAAa9F,GAlBjE,YAkBUuD,EAlBVwD,EAAAT,MAoBiBC,OApBjB,CAAAQ,EAAAb,KAAA,gBAqBMM,IAAMC,MAAM,uCArBlBM,EAAAL,OAAA,qBA0BgDnD,EAASoD,KA1BzD,CAAAI,EAAAb,KAAA,eA6BY,IAAIpD,MAAM,8CA7BtB,eAgCI0D,IAAMQ,QAAQ,sBAhClBD,EAAAL,OAAA,SAkCW3B,EAAKS,SAAS,SAACC,GAKpB,MAAO,CACLjB,oBAAoB,EACpBE,SANsBK,EAAKU,MAAMf,SAASuC,OAC1C,SAAAhD,GAAO,OAAIA,EAAQD,MAAQ6C,QApCnC,eAAAE,EAAAd,KAAA,GAAAc,EAAApD,GAAAoD,EAAA,SA6CIP,IAAMC,MAAM,mCA7ChBM,EAAAL,OAAA,SA+CW3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLjB,oBAAoB,MAjD5B,yBAAAuC,EAAAH,SAAAE,EAAA,oBA9FF/B,EAAKU,MAAQV,EAAKM,aAHcN,mFAiBhC,OAFAE,KAAKrH,MAAMsJ,iBARiC,CAC1CC,cAAc,EACdC,YAAY,EACZxH,WAAW,EACXC,cAAc,EACdwH,WAAW,IAKNpC,KAAKM,iDA4IZ,OACEvH,EAAAC,EAAAC,cAAA,OAAKmC,GAAG,YACL4E,KAAKQ,MAAMH,mBACVtH,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,oBACbpC,EAAAC,EAAAC,cAAC2F,EAAD,CAAenC,QAAQ,mBAGzB1D,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,CACEC,QAV+B,IAW/BC,IAAKvC,KAAKQ,MAAMH,oBAEhBtH,EAAAC,EAAAC,cAAA,QAAMkC,UAAU,iBACb6E,KAAKQ,MAAMf,SAASzE,QAAU,EAC7BjC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYD,QAAQ,WAAW3D,MAAM,iBAArC,wBAIAC,EAAAC,EAAAC,cAACuJ,EAAD,CACE/C,SAAUO,KAAKQ,MAAMf,SACrBJ,cAAeW,KAAKX,cACpBE,mBAAoBS,KAAKQ,MAAMjB,+BAxL3BxF,IAAM0I,wDC+BrB,SAASC,EAAkB/J,GAChC,IAAMgK,EAAuBhK,EAAMgK,YAEnC,OACE5J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACP,EAADS,OAAAC,OAAA,GACMT,EAAMiK,gBADZ,CAEEjH,QAAShD,EAAMiK,gBAAgBjH,QAC/B2D,SAAUqD,IAEThK,EAAMiK,gBAAgBhJ,OAEzBb,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CACEzH,GAAIzC,EAAMmK,QACV7G,KAAM0G,EACNxG,QAASxD,EAAMoK,aACfC,kBAAgB,qBAEhBjK,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CAAa7H,GAAG,qBACdrC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYC,MAAM,OAAOF,QAAQ,WAC9B9D,EAAMuK,aAGXnK,EAAAC,EAAAC,cAACkK,EAAA,EAAD,KAAgBxK,EAAMa,UACtBT,EAAAC,EAAAC,cAACmK,EAAA,EAAD,KACGzK,EAAM0K,WACLtK,EAAAC,EAAAC,cAACP,EAADS,OAAAC,OAAA,GACMT,EAAM2K,kBADZ,CAEE3H,QACEhD,EAAM2K,mBAAqB3K,EAAM2K,kBAAkB3H,UAGpDhD,EAAM2K,mBAAqB3K,EAAM2K,kBAAkB1J,OAGvDjB,EAAM4K,YACLxK,EAAAC,EAAAC,cAACP,EAADS,OAAAC,OAAA,CACEuC,QACEhD,EAAM6K,oBAAsB7K,EAAM6K,mBAAmB7H,SAEnDhD,EAAM6K,oBAET7K,EAAM6K,oBAAsB7K,EAAM6K,mBAAmB5J,uBCrD7D,SAAS6J,EAAqB9K,GACnC,OACEI,EAAAC,EAAAC,cAACyK,EAAA,EAADvK,OAAAC,OAAA,CACEuK,WAAY,CACVC,UAAWjL,EAAMiL,YAEfjL,kCCrBH,SAASkL,GAAqBlL,GACnC,OACEI,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAyBC,MAAOC,MAC9BjL,EAAAC,EAAAC,cAACgL,EAAA,EAAmBtL,eCZbuL,GAAY,SAACvL,GAWpB,IAAAwL,EACyCxL,EAAMiD,MAA3CmD,EADJoF,EACIpF,IAAKE,EADTkF,EACSlF,MAAOrF,EADhBuK,EACgBvK,MAAOuF,EADvBgF,EACuBhF,KAAMiF,EAD7BD,EAC6BC,QACzBC,EAAW1L,EAAM2B,SAASQ,KAA1BuJ,OACAC,EAA4B3L,EAAM4L,aAAlCD,wBAQR,OACEvL,EAAAC,EAAAC,cAAA,MAAIkC,UAAU,mBACZpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,mBACbpC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYvB,UAAU,cAAcsB,QAAQ,KAAK3D,MAAM,eACpDc,GAEHb,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,gBACbpC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACEvB,UAAU,cACVsB,QAAQ,YACR3D,MAAM,iBAHR,IAKImG,GAEJlG,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACEvB,UAAU,aACVsB,QAAQ,YACR3D,MAAM,iBAEL,IAAIoG,KAAKC,GAAMC,kBAItBrG,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,iBACZkJ,IAAWD,EAAQrF,IAClBhG,EAAAC,EAAAC,cAAA,OAAKmC,GAAG,sBACNrC,EAAAC,EAAAC,cAACyJ,EAAD,CACEC,YAAahK,EAAM4L,aAAaC,wBAChCzB,aAAcpK,EAAM4L,aAAaE,gBACjC3B,QAAQ,mBACRI,WAAW,gBACXG,WAAS,EACTE,YAAU,EACVX,gBAAiB,CACf9J,MAAO,UACPyD,KAAM,QACNE,QAAS,WACTD,KAAM,SACN5C,MAAO,UACP+B,QA7CU,WACtB,GAAIoD,EACF,OAAOpG,EAAM4L,aAAaG,mBAAmB3F,KA6CrCuE,kBAAmB,CACjBxK,MAAO,UACPyD,KAAM,QACNE,QAAS,OACTD,KAAM,SACN5C,MAAO,SACP+B,QAAShD,EAAM4L,aAAaE,iBAE9BjB,mBAAoB,CAClB1K,MAAO,UACPyD,KAAM,QACNE,QAAS,OACTD,KAAM,SACN5C,MAAO,OACP0F,SAAU3G,EAAM4L,aAAaI,eAC7BhJ,QAAShD,EAAM4L,aAAaK,qBAI9B7L,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,sBACbpC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYD,QAAQ,KAAK3D,MAAM,WAA/B,UAGAC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYD,QAAQ,aACjB6H,EAAwB1K,QAG7Bb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYD,QAAQ,KAAK3D,MAAM,WAA/B,eAGAC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYD,QAAQ,aACjB,IAAIyC,KAAKoF,EAAwBO,WAAWzF,iBAGjDrG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYD,QAAQ,KAAK3D,MAAM,WAA/B,eAGAC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYD,QAAQ,aACjB6H,EAAwBQ,cAG7B/L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYD,QAAQ,KAAK3D,MAAM,WAA/B,SAGAC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYD,QAAQ,aACjB,IAAIyC,KAAKoF,EAAwBnF,MAAMC,iBAG5CrG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYD,QAAQ,KAAK3D,MAAM,WAA/B,UAGAC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYD,QAAQ,aAApB,IACI6H,EAAwBrF,WAOpClG,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYD,QAAQ,YAApB,uBChIGsI,WAAY,SAACpM,GAYxB,IAAMqM,EAASrM,EAAMqM,OAErB,OACEA,GACEjM,EAAAC,EAAAC,cAAA,MAAIkC,UAAU,cACX6J,EAAOtF,IAAI,SAAC9D,GACX,OACE7C,EAAAC,EAAAC,cAACgM,GAAD,CACErF,IAAKhE,EAAMmD,IACXnD,MAAOA,EACPtB,SAAU3B,EAAM2B,SAChBiK,aAAc5L,EAAMuM,qBC+hBnBC,uBA7gBb,SAAAA,EAAYxM,GAAoB,IAAAmH,EAAA,OAAA3G,OAAA4G,EAAA,EAAA5G,CAAA6G,KAAAmF,IAC9BrF,EAAA3G,OAAA8G,EAAA,EAAA9G,CAAA6G,KAAA7G,OAAA+G,EAAA,EAAA/G,CAAAgM,GAAAhF,KAAAH,KAAMrH,KAhCRyH,aAA4B,CAC1B4E,OAAQ,GACRI,iBAAkB,CAChBjG,MAAM,IAAID,MAAOmG,cACjBP,YAAa,GACb7F,MAAO,EACPrF,MAAO,IAET0K,wBAAyB,CACvBvF,IAAK,GACL8F,UAAW,GACXT,QAAS,CACPrF,IAAK,GACL8F,UAAW,GACXS,cAAe,GACfC,MAAO,GACPC,SAAU,GACVC,SAAU,IAEZtG,KAAM,GACN2F,YAAa,GACb7F,MAAO,EACPrF,MAAO,IAET8L,0BAA0B,EAC1BlB,yBAAyB,EACzBmB,iBAAiB,EACjBhB,gBAAgB,EAChBiB,kBAAkB,GAGY9F,EAOhC+F,UAAY,WACV/F,EAAKS,SAAS,SAACC,GACb,OAAOV,EAAKM,gBATgBN,EA4BhCgG,YAAc,WACZhG,EAAKS,SACH,SAACC,GACC,MAAO,CACLoF,kBAAkB,IAHxBzM,OAAAsH,EAAA,EAAAtH,CAAAuH,EAAA1H,EAAA2H,KAME,SAAAC,IAAA,IAAAC,EAAA9F,EAAAuD,EAAAyH,EAAA,OAAArF,EAAA1H,EAAA+H,KAAA,SAAAtC,GAAA,cAAAA,EAAAuC,KAAAvC,EAAAwC,MAAA,wLAeQJ,EAAc,CAClBK,MAAK,uCAAAC,OAhBT,2KAgBS,0BAhBT1C,EAAAuC,KAAA,EAwBUjG,EAAQ+E,EAAKnH,MAAM2B,SAASQ,KAAKC,MAxB3C0D,EAAAwC,KAAA,EAyB2BzD,EAAa4D,YAAYP,EAAa9F,GAzBjE,YAyBUuD,EAzBVG,EAAA4C,MA2BiBC,OA3BjB,CAAA7C,EAAAwC,KAAA,gBA4BMM,IAAMC,MAAM,oCA5BlB/C,EAAAgD,OAAA,qBAiCUsE,EAAkCzH,EAASoD,KAjCrD,CAAAjD,EAAAwC,KAAA,eAoCY,IAAIpD,MAAM,2CApCtB,eAAAY,EAAAgD,OAAA,SAuCW3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLoF,kBAAkB,EAClBZ,OAAQe,EAAUf,WA1C1B,eAAAvG,EAAAuC,KAAA,GAAAvC,EAAAC,GAAAD,EAAA,SA8CI8C,IAAMC,MAAM,iCA9ChB/C,EAAAgD,OAAA,SAgDW3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLoF,kBAAkB,MAlD1B,yBAAAnH,EAAAkD,SAAAf,EAAA,oBAnC4Bd,EA8FhCkG,mBAAqB,SAACpK,GACpBA,EAAMqK,UAEN,IAAMC,EAA2BtK,EAAMsK,OAEvCpG,EAAKS,SAAS,SAACC,GACb,MAAO,CACL4E,iBAAiBjM,OAAAgN,EAAA,EAAAhN,CAAA,GACZqH,EAAM4E,iBADK,CAEdxL,MAAOsM,EAAOE,YAvGUtG,EA8GhCuG,mBAAqB,SAACzK,GACpBA,EAAMqK,UAEN,IAAMC,EAA2BtK,EAAMsK,OAEvCpG,EAAKS,SAAS,SAACC,GACb,MAAO,CACL4E,iBAAiBjM,OAAAgN,EAAA,EAAAhN,CAAA,GACZqH,EAAM4E,iBADK,CAEdnG,MAAOiH,EAAOE,YAvHUtG,EA8HhCwG,yBAA2B,SAAC1K,GAC1BA,EAAMqK,UAEN,IAAMC,EAA2BtK,EAAMsK,OAEvCpG,EAAKS,SAAS,SAACC,GACb,MAAO,CACL4E,iBAAiBjM,OAAAgN,EAAA,EAAAhN,CAAA,GACZqH,EAAM4E,iBADK,CAEdN,YAAaoB,EAAOE,YAvIItG,EA8IhCyG,kBAAoB,SAACpH,GACnBW,EAAKS,SAAS,SAACC,GACb,MAAO,CACL4E,iBAAiBjM,OAAAgN,EAAA,EAAAhN,CAAA,GACZqH,EAAM4E,iBADK,CAEdjG,KAAM,IAAID,KAAKC,GAAMkG,oBAnJGvF,EAwKhC0G,YAxKgC,eAAAC,EAAAtN,OAAAsH,EAAA,EAAAtH,CAAAuH,EAAA1H,EAAA2H,KAwKlB,SAAAkB,EAAO6E,GAAP,IAAA7F,EAAA9F,EAAAuD,EAAA1C,EAAA,OAAA8E,EAAA1H,EAAA+H,KAAA,SAAAe,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,gKAeNJ,EAAc,CAClBK,MAAK,gEAAAC,OAEgCuF,EAAW9M,MAF3C,cAAAuH,OAE6DuF,EAAWzH,MAFxE,oBAAAkC,OAEgGuF,EAAW5B,YAF3G,cAAA3D,OAEmIuF,EAAWvH,KAF9I,iBAAAgC,OAhBK,mJAgBL,sBAhBKW,EAAAd,KAAA,EAyBJjG,EAAQ+E,EAAKnH,MAAM2B,SAASQ,KAAKC,MAzB7B+G,EAAAb,KAAA,EA0BazD,EAAa4D,YAAYP,EAAa9F,GA1BnD,YA0BJuD,EA1BIwD,EAAAT,MA4BGC,OA5BH,CAAAQ,EAAAb,KAAA,gBA6BRM,IAAMC,MAAM,oBA7BJM,EAAAL,OAAA,SA+BD3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLmF,iBAAiB,MAjCb,WAsCJ/J,EAAiC0C,EAASoD,KAtCtC,CAAAI,EAAAb,KAAA,eAwCF,IAAIpD,MAAM,0CAxCR,eA2CV0D,IAAMQ,QAAQ,kBA3CJD,EAAAL,OAAA,SA6CH3B,EAAKS,SAAS,SAACC,GACpB,IAAMmG,EAAaxN,OAAAyN,EAAA,EAAAzN,CAAOqH,EAAMwE,QAIhC,OAFA2B,EAAcE,KAAKjL,EAAM4K,aAElB,CACLxB,OAAQ2B,EACRhB,iBAAiB,EACjBD,0BAA0B,EAC1BN,iBAAkB,CAChBjG,MAAM,IAAID,MAAOmG,cACjBP,YAAa,GACb7F,MAAO,EACPrF,MAAO,QA1DH,cAAAkI,EAAAd,KAAA,GAAAc,EAAApD,GAAAoD,EAAA,SA+DVP,IAAMC,MAAM,iCA/DFM,EAAApD,GAAA,yBAAAoD,EAAAH,SAAAE,EAAA,kBAxKkB,gBAAAiF,GAAA,OAAAL,EAAAM,MAAA/G,KAAAgH,YAAA,GAAAlH,EA8OhCmH,oBA9OgC9N,OAAAsH,EAAA,EAAAtH,CAAAuH,EAAA1H,EAAA2H,KA8OV,SAAAuG,IAAA,OAAAxG,EAAA1H,EAAA+H,KAAA,SAAAoG,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAlG,MAAA,OACpBnB,EAAKS,SACH,SAACC,GACC,MAAO,CACLmF,iBAAiB,IAHvBxM,OAAAsH,EAAA,EAAAtH,CAAAuH,EAAA1H,EAAA2H,KAME,SAAAyG,IAAA,IAAAV,EAAA,OAAAhG,EAAA1H,EAAA+H,KAAA,SAAAsG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,UAEQyF,EAA0B,CAC9BvH,KAAMW,EAAKU,MAAM4E,iBAAiBjG,KAAKmI,OACvCxC,YAAahF,EAAKU,MAAM4E,iBAAiBN,YAAYwC,OACrDrI,MAAOa,EAAKU,MAAM4E,iBAAiBnG,MACnCrF,MAAOkG,EAAKU,MAAM4E,iBAAiBxL,MAAM0N,QAN7CD,EAAArG,KAAA,EAUkBlB,EAAKyH,kBAAkBb,GAVzC,CAAAW,EAAApG,KAAA,cAaY,IAAIpD,MAAM,uBAbtB,OAAAwJ,EAAApG,KAAA,uBAAAoG,EAAArG,KAAA,EAAAqG,EAAA3I,GAAA2I,EAAA,SAgBI9F,IAAMC,MAAM,gBAhBhB6F,EAAA5F,OAAA,SAkBW3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLmF,iBAAiB,MApBzB,eAAA0B,EAAArG,KAAA,GAAAqG,EAAApG,KAAA,GA0BUnB,EAAK0G,YAAYE,GA1B3B,eAAAW,EAAA5F,OAAA,yBAAA4F,EAAArG,KAAA,GAAAqG,EAAAG,GAAAH,EAAA,UAAAA,EAAA5F,OAAA,SA6BW3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLmF,iBAAiB,MA/BzB,yBAAA0B,EAAA1F,SAAAyF,EAAA,0BAPkB,wBAAAD,EAAAxF,SAAAuF,MA9OUpH,EA6RhC2H,qBAAuB,WACrB,OAAO3H,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLkF,0BAA0B,MAhSA5F,EAsShC2E,gBAAkB,WAChB,OAAO3E,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLmF,iBAAiB,EACjBhB,gBAAgB,EAChBe,0BAA0B,EAC1BlB,yBAAyB,EACzBY,iBAAkB,CAChBjG,MAAM,IAAID,MAAOmG,cACjBP,YAAa,GACb7F,MAAO,EACPrF,MAAO,QAjTiBkG,EAwThC4E,mBAAqB,SAACgD,GACpB,IAAMC,EAAgB7H,EAAKU,MAAMwE,OAAO4C,KAAK,SAAAC,GAAC,OAAIA,EAAE9I,MAAQ2I,IAE5D,OAAIC,EACK7H,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLgE,yBAAyB,EACzBF,wBAAyBqD,UAI7BpG,IAAMC,MAAM,oDAnUgB1B,EAyUhC8E,mBAAqB,WACnB9E,EAAKS,SACH,SAACC,GACC,MAAO,CACLmE,gBAAgB,IAHtBxL,OAAAsH,EAAA,EAAAtH,CAAAuH,EAAA1H,EAAA2H,KAME,SAAAmH,IAAA,IAAAjH,EAAA9F,EAAAuD,EAAA,OAAAoC,EAAA1H,EAAA+H,KAAA,SAAAgH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,+DAOQJ,EAAc,CAClBK,MAAK,2DAAAC,OAEmBrB,EAAKU,MAAM8D,wBAAwBvF,IAFtD,oBAAAoC,OART,kDAQS,8BART4G,EAAA/G,KAAA,EAiBUjG,EAAQ+E,EAAKnH,MAAM2B,SAASQ,KAAKC,MAjB3CgN,EAAA9G,KAAA,EAkB2BzD,EAAa4D,YAAYP,EAAa9F,GAlBjE,YAkBUuD,EAlBVyJ,EAAA1G,MAoBiBC,OApBjB,CAAAyG,EAAA9G,KAAA,gBAqBMM,IAAMC,MAAM,oBArBlBuG,EAAAtG,OAAA,SAuBa3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLmE,gBAAgB,MAzB1B,WA8B6CrG,EAASoD,KA9BtD,CAAAqG,EAAA9G,KAAA,eAgCY,IAAIpD,MAAM,yCAhCtB,eAmCI0D,IAAMQ,QAAQ,uBAnClBgG,EAAAtG,OAAA,SAqCW3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLgE,yBAAyB,EACzBG,gBAAgB,MAxCxB,QAAAoD,EAAA/G,KAAA,GAAA+G,EAAArJ,GAAAqJ,EAAA,SA4CIxG,IAAMC,MAAM,+BAEZ1B,EAAKS,SAAS,SAACC,GACb,MAAO,CACLmE,gBAAgB,KAhDxB,yBAAAoD,EAAApG,SAAAmG,EAAA,oBA7UFhI,EAAKU,MAAQV,EAAKM,aAHYN,mFAwB9B,OAFAE,KAAKrH,MAAMsJ,iBARiC,CAC1CC,cAAc,EACdC,YAAY,EACZxH,WAAW,EACXC,cAAc,EACdwH,WAAW,IAKNpC,KAAK8F,wDAkIIkC,GAAiC,IACzC7I,EAAoC6I,EAApC7I,KAAM2F,EAA8BkD,EAA9BlD,YAAa7F,EAAiB+I,EAAjB/I,MAAOrF,EAAUoO,EAAVpO,MAClC,QACEuF,EAAKnE,OAAS,GACd8J,EAAY9J,OAAS,GACrBiE,GAAS,GACTrF,EAAMoB,OAAS,oCA2OjB,OACEjC,EAAAC,EAAAC,cAAA,OAAKmC,GAAG,UAENrC,EAAAC,EAAAC,cAAA,OAAKmC,GAAG,uBACNrC,EAAAC,EAAAC,cAACyJ,EAAD,CACEC,YAAa3C,KAAKQ,MAAMkF,yBACxB3C,aAAc/C,KAAKyE,gBACnB3B,QAAQ,qBACRI,WAAW,iBACXG,WAAS,EACTE,YAAU,EACVX,gBAAiB,CACf9J,MAAO,UACPyD,KAAM,QACNE,QAAS,YACTD,KAAM,SACN5C,MAAO,eACP+B,QAASqE,KAAKyH,sBAEhBnE,kBAAmB,CACjBxK,MAAO,UACPyD,KAAM,QACNE,QAAS,OACTD,KAAM,SACN5C,MAAO,SACP+B,QAASqE,KAAKyE,iBAEhBjB,mBAAoB,CAClB1K,MAAO,UACPyD,KAAM,QACNE,QAAS,OACTD,KAAM,SACN5C,MAAO,SACP0F,SAAUU,KAAKQ,MAAMmF,gBACrBhK,QAASqE,KAAKiH,sBAGhBlO,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,qBACbpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,gBACbpC,EAAAC,EAAAC,cAACwK,EAAD,CACEG,UAAW,GACXqE,aAAa,MACbC,SAAUlI,KAAKgG,mBACfmC,MAAM,OACN3L,KAAK,OACL4L,KAAK,OACLhN,GAAG,aACHiN,OAAO,SACP5L,QAAQ,cAGZ1D,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,gBACbpC,EAAAC,EAAAC,cAACwK,EAAD,CACEwE,aAAa,MACbC,SAAUlI,KAAKqG,mBACf8B,MAAM,QACN3L,KAAK,SACL4L,KAAK,QACLhN,GAAG,cACHiN,OAAO,SACP5L,QAAQ,cAIZ1D,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,gBACbpC,EAAAC,EAAAC,cAAC4K,GAAD,CACEuC,MAAOpG,KAAKQ,MAAM4E,iBAAiBjG,KACnCkJ,OAAO,SACPF,MAAM,OACNG,aAAa,WACbJ,SAAUlI,KAAKuG,qBAInBxN,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,gBACbpC,EAAAC,EAAAC,cAACwK,EAAD,CACEG,UAAW,IACXqE,aAAa,MACbC,SAAUlI,KAAKsG,yBACf6B,MAAM,cACN3L,KAAK,OACL4L,KAAK,cACLhN,GAAG,oBACHiN,OAAO,SACP5L,QAAQ,WACR8L,WAAS,EACTC,KAAM,QAQfxI,KAAKQ,MAAMoF,iBACV7M,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,kBACbpC,EAAAC,EAAAC,cAAC2F,EAAD,CAAenC,QAAQ,mBAGzB1D,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,CACEC,QAtG6B,IAuG7BC,IAAKvC,KAAKQ,MAAMoF,kBAEhB7M,EAAAC,EAAAC,cAAA,QAAMkC,UAAU,eACb6E,KAAKQ,MAAMwE,OAAOhK,QAAU,EAC3BjC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAYD,QAAQ,WAAW3D,MAAM,iBAArC,uBAIAC,EAAAC,EAAAC,cAACwP,GAAD,CACEzD,OAAQhF,KAAKQ,MAAMwE,OACnB1K,SAAU0F,KAAKrH,MAAM2B,SACrB4K,cAAe,CACbT,gBAAiBzE,KAAKyE,gBACtBG,mBAAoB5E,KAAK4E,mBACzBD,eAAgB3E,KAAKQ,MAAMmE,eAC3BH,wBAAyBxE,KAAKQ,MAAMgE,wBACpCE,mBAAoB1E,KAAK0E,mBACzBJ,wBAAyBtE,KAAKQ,MAAM8D,qCAjiBpCvK,IAAM0I,YCiZXiG,uBAvYb,SAAAA,EAAY/P,GAAmB,IAAAmH,EAAA,OAAA3G,OAAA4G,EAAA,EAAA5G,CAAA6G,KAAA0I,IAC7B5I,EAAA3G,OAAA8G,EAAA,EAAA9G,CAAA6G,KAAA7G,OAAA+G,EAAA,EAAA/G,CAAAuP,GAAAvI,KAAAH,KAAMrH,KAdRyH,aAA2B,CAEzBmF,MAAO,GACPC,SAAU,GAGVzK,MAAO,GACP4N,gBAAiB,GACjBtE,OAAQ,GACRuE,gBAAgB,EAChBC,oBAAoB,GAGS/I,EAM/BgJ,yBAA2B,WACzB,OAAOC,OAAOC,aAAaC,QAAQ,UAPNnJ,EA6C/B+F,UAAY,WACV/F,EAAKS,SAAS,SAACC,GACb,OAAOV,EAAKM,gBA/CeN,EAoD/BoJ,mBAAqB,SAACtN,GACpBA,EAAMqK,UAEN,IAAMC,EAA2BtK,EAAMsK,OAEvCpG,EAAKS,SAAS,SAACC,GACb,MAAO,CACL+E,MAAOW,EAAOE,UA3DWtG,EAiE/BqJ,sBAAwB,SAACvN,GACvBA,EAAMqK,UAEN,IAAMC,EAA2BtK,EAAMsK,OAEvCpG,EAAKS,SAAS,SAACC,GACb,MAAO,CACLgF,SAAUU,EAAOE,UAxEQtG,EAuF/BsJ,SAvF+B,eAAAC,EAAAlQ,OAAAsH,EAAA,EAAAtH,CAAAuH,EAAA1H,EAAA2H,KAuFpB,SAAAkB,EAAOmG,GAAP,IAAAnH,EAAAvC,EAAAgL,EAAA,OAAA5I,EAAA1H,EAAA+H,KAAA,SAAAe,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,6IAWHJ,EAAc,CAClBK,MAAK,wEAAAC,OAEoC6G,EAAUzC,MAF9C,kBAAApE,OAEoE6G,EAAUxC,SAF9E,QAAArE,OAZE,gIAYF,8BAZEW,EAAAd,KAAA,EAAAc,EAAAb,KAAA,EAoBgBzD,EAAa4D,YAAYP,GApBzC,YAoBDvC,EApBCwD,EAAAT,MAsBMC,OAtBN,CAAAQ,EAAAb,KAAA,eAuBLM,IAAMC,MAAM,qCAvBPM,EAAAL,OAAA,SAyBE3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLoI,gBAAgB,MA3Bf,UAgCDU,EAAgChL,EAASoD,KAhCxC,CAAAI,EAAAb,KAAA,eAkCC,IAAIpD,MAAM,sCAlCX,eAAAiE,EAAAL,OAAA,SAqCA3B,EAAKS,SACV,SAACC,GACC,MAAO,CACL6D,OAAQiF,EAAKC,aAAaxK,IAC1BwG,MAAO+D,EAAKC,aAAahE,MACzBC,SAAU,KALTrM,OAAAsH,EAAA,EAAAtH,CAAAuH,EAAA1H,EAAA2H,KAQL,SAAAC,IAAA,OAAAF,EAAA1H,EAAA+H,KAAA,SAAAtC,GAAA,cAAAA,EAAAuC,KAAAvC,EAAAwC,MAAA,cAAAxC,EAAAuC,KAAA,EAAAvC,EAAAwC,KAAA,EAEUnB,EAAK0J,MAAMxB,GAFrB,cAAAvJ,EAAAgD,OAAA,wBAAAhD,EAAAuC,KAAA,EAAAvC,EAAAC,GAAAD,EAAA,SAAAA,EAAAgD,OAAA,kCAAAhD,EAAAkD,SAAAf,EAAA,mBA7CK,cAAAkB,EAAAd,KAAA,GAAAc,EAAApD,GAAAoD,EAAA,SAwDPP,IAAMC,MAAM,6BAxDLM,EAAApD,GAAA,yBAAAoD,EAAAH,SAAAE,EAAA,kBAvFoB,gBAAAiF,GAAA,OAAAuC,EAAAtC,MAAA/G,KAAAgH,YAAA,GAAAlH,EAsJ/B0J,MAtJ+B,eAAAC,EAAAtQ,OAAAsH,EAAA,EAAAtH,CAAAuH,EAAA1H,EAAA2H,KAsJvB,SAAAyG,EAAOY,GAAP,IAAAnH,EAAAvC,EAAAgL,EAAA,OAAA5I,EAAA1H,EAAA+H,KAAA,SAAAsG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,8GASAJ,EAAc,CAClBK,MAAK,8DAAAC,OAE6B6G,EAAUzC,MAFvC,kBAAApE,OAE6D6G,EAAUxC,SAFvE,qBAAArE,OAVD,iGAUC,8BAVDkG,EAAArG,KAAA,EAAAqG,EAAApG,KAAA,EAmBmBzD,EAAa4D,YAAYP,GAnB5C,YAmBEvC,EAnBF+I,EAAAhG,MAqBSC,OArBT,CAAA+F,EAAApG,KAAA,eAsBFM,IAAMC,MAAM,uBAtBV6F,EAAA5F,OAAA,SAwBK3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLoI,gBAAgB,MA1BlB,UA+BEU,EAAyBhL,EAASoD,KA/BpC,CAAA2F,EAAApG,KAAA,eAiCI,IAAIpD,MAAM,sCAjCd,eAoCJ0D,IAAMQ,QAAQ,sBApCVsF,EAAA5F,OAAA,SAsCG3B,EAAKS,SACV,SAACC,GACC,MAAO,CACL6D,OAAQiF,EAAKE,MAAMnF,OACnBkB,MAAOyC,EAAUzC,MACjBC,SAAU,GACVzK,MAAOuO,EAAKE,MAAMzO,MAClB4N,gBAAiBW,EAAKE,MAAMb,gBAC5BC,gBAAgB,IAGpB,WACE9I,EAAK4J,4BAA4B5J,EAAKU,MAAMzF,OAC5C+E,EAAKnH,MAAMgR,SAAS7J,EAAKU,UAnDzB,cAAA6G,EAAArG,KAAA,GAAAqG,EAAA3I,GAAA2I,EAAA,SAwDJ9F,IAAMC,MAAM,0BAxDR6F,EAAA3I,GAAA,yBAAA2I,EAAA1F,SAAAyF,EAAA,kBAtJuB,gBAAAwC,GAAA,OAAAH,EAAA1C,MAAA/G,KAAAgH,YAAA,GAAAlH,EAqN/B+J,eArN+B,eAAAC,EAAA3Q,OAAAsH,EAAA,EAAAtH,CAAAuH,EAAA1H,EAAA2H,KAqNd,SAAAuG,EAAO6C,GAAP,IAAAlJ,EAAAvC,EAAAgL,EAAA,OAAA5I,EAAA1H,EAAA+H,KAAA,SAAAoG,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAlG,MAAA,sFASTJ,EAAc,CAClBK,MAAK,gEAAAC,OAEmC4I,EAFnC,iBAAA5I,OAVQ,yEAUR,sBAVQgG,EAAAnG,KAAA,EAAAmG,EAAAlG,KAAA,EAmBUzD,EAAa4D,YAAYP,GAnBnC,YAmBPvC,EAnBO6I,EAAA9F,MAqBAC,OArBA,CAAA6F,EAAAlG,KAAA,eAsBXM,IAAMC,MAAM,uBAtBD2F,EAAA1F,OAAA,SAwBJ3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLqI,oBAAoB,EACpBD,gBAAgB,MA3BT,UAgCPU,EAAgChL,EAASoD,KAhClC,CAAAyF,EAAAlG,KAAA,eAkCL,IAAIpD,MAAM,sCAlCL,eAqCb0D,IAAMQ,QAAQ,sBArCDoF,EAAA1F,OAAA,SAuCN3B,EAAKS,SACV,SAACC,GACC,MAAO,CACL6D,OAAQiF,EAAKO,eAAexF,OAC5BkB,MAAO+D,EAAKO,eAAetE,MAC3BC,SAAU,GACVzK,MAAOgP,EACPpB,gBAAiBW,EAAKO,eAAelB,gBACrCC,gBAAgB,EAChBC,oBAAoB,IAGxB,WACE/I,EAAKnH,MAAMgR,SAAS7J,EAAKU,UApDhB,cAAA2G,EAAAnG,KAAA,GAAAmG,EAAAzI,GAAAyI,EAAA,SAyDb5F,IAAMC,MAAM,0BAzDC2F,EAAAzI,GAAA,yBAAAyI,EAAAxF,SAAAuF,EAAA,kBArNc,gBAAA8C,GAAA,OAAAF,EAAA/C,MAAA/G,KAAAgH,YAAA,GAAAlH,EAoR/B4J,4BAA8B,SAAC3O,GAC7BgO,OAAOC,aAAaiB,QAAQ,QAASlP,IArRR+E,EAyR/BoK,eAzR+B,eAAAC,EAAAhR,OAAAsH,EAAA,EAAAtH,CAAAuH,EAAA1H,EAAA2H,KAyRd,SAAAyJ,EAAOxO,GAAP,OAAA8E,EAAA1H,EAAA+H,KAAA,SAAAsJ,GAAA,cAAAA,EAAArJ,KAAAqJ,EAAApJ,MAAA,cACfrF,EAAM0O,iBADSD,EAAA5I,OAAA,SAGR3B,EAAKS,SACV,SAACC,GACC,MAAO,CACLoI,gBAAgB,IAHfzP,OAAAsH,EAAA,EAAAtH,CAAAuH,EAAA1H,EAAA2H,KAML,SAAAmH,IAAA,IAAAE,EAAAtN,EAAA,OAAAgG,EAAA1H,EAAA+H,KAAA,SAAAgH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,UAEQ+G,EAAwB,CAC5BzC,MAAOzF,EAAKU,MAAM+E,MAAM+B,OACxB9B,SAAU1F,EAAKU,MAAMgF,SAAS8B,QAJlCS,EAAA/G,KAAA,EAQkBlB,EAAKyK,iBAAiBvC,GARxC,CAAAD,EAAA9G,KAAA,cAWY,IAAIpD,MAAM,sBAXtB,OAAAkK,EAAA9G,KAAA,uBAAA8G,EAAA/G,KAAA,EAAA+G,EAAArJ,GAAAqJ,EAAA,SAcIxG,IAAMC,MAAM,uBAdhBuG,EAAAtG,OAAA,SAgBW3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLoI,gBAAgB,MAlBxB,aAwBUlO,EAAeoF,EAAKnH,MAAM2B,SAA1BI,YACOE,eAAgBF,EAAWC,UAzB5C,CAAAoN,EAAA9G,KAAA,YAAA8G,EAAA/G,KAAA,IA2BUtG,EAAWE,aA3BrB,CAAAmN,EAAA9G,KAAA,gBAAA8G,EAAA9G,KAAA,GA4BcnB,EAAKsJ,SAASpB,GA5B5B,eAAAD,EAAAtG,OAAA,yBAAAsG,EAAA9G,KAAA,GA+BcnB,EAAK0J,MAAMxB,GA/BzB,eAAAD,EAAAtG,OAAA,kBAAAsG,EAAA9G,KAAA,wBAAA8G,EAAA/G,KAAA,GAAA+G,EAAAP,GAAAO,EAAA,UAAAA,EAAAtG,OAAA,SAmCa3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLoI,gBAAgB,MArC1B,QAAAb,EAAA9G,KAAA,wBA2CIM,IAAMC,MAAM,qBA3ChBuG,EAAAtG,OAAA,SA6CW3B,EAAKS,SAAS,SAACC,GACpB,MAAO,CACLoI,gBAAgB,MA/CxB,yBAAAb,EAAApG,SAAAmG,EAAA,2BATa,wBAAAuC,EAAA1I,SAAAyI,MAzRc,gBAAAI,GAAA,OAAAL,EAAApD,MAAA/G,KAAAgH,YAAA,GAG7BlH,EAAKU,MAAQV,EAAKM,aAHWN,mFAUX,IAAA2K,EAAAzK,KAClB,OAAOA,KAAKO,SACV,SAACC,GACC,MAAO,CACLqI,oBAAoB,EACpBD,gBAAgB,IAJfzP,OAAAsH,EAAA,EAAAtH,CAAAuH,EAAA1H,EAAA2H,KAOL,SAAA+J,IAAA,IAAA3P,EAAA,OAAA2F,EAAA1H,EAAA+H,KAAA,SAAA4J,GAAA,cAAAA,EAAA3J,KAAA2J,EAAA1J,MAAA,YACQlG,EAAQ0P,EAAK3B,4BADrB,CAAA6B,EAAA1J,KAAA,gBAAA0J,EAAA3J,KAAA,EAAA2J,EAAA1J,KAAA,EAIYwJ,EAAKZ,eAAe9O,GAJhC,cAAA4P,EAAAlJ,OAAA,wBAAAkJ,EAAA3J,KAAA,EAAA2J,EAAAjM,GAAAiM,EAAA,SAAAA,EAAAlJ,OAAA,SAOagJ,EAAKlK,SAAS,SAACC,GACpB,MAAO,CACLqI,oBAAoB,EACpBD,gBAAgB,MAV1B,eAAA+B,EAAAlJ,OAAA,SAgBSgJ,EAAKlK,SAAS,SAACC,GACpB,MAAO,CACLqI,oBAAoB,EACpBD,gBAAgB,MAnBtB,yBAAA+B,EAAAhJ,SAAA+I,EAAA,2DA4Da1C,GAAgC,IACvCzC,EAAoByC,EAApBzC,MAAOC,EAAawC,EAAbxC,SACf,QAAID,EAAMvK,OAAS,GAAKwK,EAASxK,OAAS,oCA0Q1C,IAAMV,EAAsB0F,KAAKrH,MAAM2B,SAEvC,OAAQ0F,KAAKQ,MAAMqI,mBAsCjB9P,EAAAC,EAAAC,cAAC2F,EAAD,CAAegM,UAAW,EAAGrO,KAAM,IAAKE,QAAQ,kBArChD1D,EAAAC,EAAAC,cAAA,QAAMmC,GAAG,OAAOyP,SAAU7K,KAAKkK,gBAC7BnR,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,gBACbpC,EAAAC,EAAAC,cAACwK,EAAD,CACEwE,aAAa,KACbC,SAAUlI,KAAKkJ,mBACff,MAAM,QACN3L,KAAK,QACL4L,KAAK,QACLhN,GAAG,QACHiN,OAAO,WAGXtP,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,gBACbpC,EAAAC,EAAAC,cAACwK,EAAD,CACEwE,aAAa,KACbC,SAAUlI,KAAKmJ,sBACfhB,MAAM,WACN3L,KAAK,WACL4L,KAAK,WACLhN,GAAG,WACHiN,OAAO,WAGXtP,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,gBACbpC,EAAAC,EAAAC,cAACP,EAAD,CACE4G,SAAUU,KAAKQ,MAAMoI,eACrBrM,KAAK,SACLC,KAAK,SACLC,QAAQ,YACR3D,MAAM,WAELwB,EAASI,WAAWC,WAAa,QACjCL,EAASI,WAAWE,cAAgB,qBA3Y9Bb,IAAM0I,YCsEVqI,eA7Db,SAAAA,EAAYnS,GAAqB,IAAAmH,EAAA,OAAA3G,OAAA4G,EAAA,EAAA5G,CAAA6G,KAAA8K,IAC/BhL,EAAA3G,OAAA8G,EAAA,EAAA9G,CAAA6G,KAAA7G,OAAA+G,EAAA,EAAA/G,CAAA2R,GAAA3K,KAAAH,KAAMrH,KAHRyH,aAA6B,GAK3BN,EAAKU,MAAQV,EAAKM,aAHaN,wEAMxB,IAAA2K,EAAAzK,KACDnF,EAASmF,KAAKrH,MAAM2B,SAASQ,KAAKC,MAAMC,OAAS,EAEvD,OACEjC,EAAAC,EAAAC,cAAA,QAAMmC,GAAG,WACPrC,EAAAC,EAAAC,cAAC8R,EAAD,MACAhS,EAAAC,EAAAC,cAAC+R,EAAA,EAAD,KACGnQ,GAAU9B,EAAAC,EAAAC,cAAC+R,EAAA,EAAD,CAAUC,KAAK,IAAI3O,GAAG,UAAU4O,OAAK,IAC/CrQ,GAAU9B,EAAAC,EAAAC,cAAC+R,EAAA,EAAD,CAAUC,KAAK,QAAQ3O,GAAG,UAAU4O,OAAK,KAClDrQ,GACA9B,EAAAC,EAAAC,cAAC+R,EAAA,EAAD,CACEG,KAAK,QACLC,OAAQ,SAAAzS,GAAK,OACXI,EAAAC,EAAAC,cAACoS,GAADlS,OAAAC,OAAA,GACMT,EADN,CAEE2B,SAAUmQ,EAAK9R,MAAM2B,SACrBqP,SAAUc,EAAK9R,MAAMgR,eAM5B9O,GACC9B,EAAAC,EAAAC,cAACF,EAAAC,EAAMsS,SAAP,KACEvS,EAAAC,EAAAC,cAAC+R,EAAA,EAAD,CACEG,KAAK,UACLC,OAAQ,SAAAzS,GAAK,OACXI,EAAAC,EAAAC,cAACsS,GAADpS,OAAAC,OAAA,GACMT,EADN,CAEE2B,SAAUmQ,EAAK9R,MAAM2B,SACrB2H,iBAAkBwI,EAAK9R,MAAMsJ,uBAInClJ,EAAAC,EAAAC,cAAC+R,EAAA,EAAD,CACEG,KAAK,YACLC,OAAQ,SAAAzS,GAAK,OACXI,EAAAC,EAAAC,cAACuS,EAADrS,OAAAC,OAAA,GACMT,EADN,CAEE2B,SAAUmQ,EAAK9R,MAAM2B,SACrB2H,iBAAkBwI,EAAK9R,MAAMsJ,wBAOtCpH,GAAU9B,EAAAC,EAAAC,cAAC+R,EAAA,EAAD,CAAU1O,GAAG,aACtBzB,GAAU9B,EAAAC,EAAAC,cAAC+R,EAAA,EAAD,CAAU1O,GAAG,mBAzDdvC,IAAM0I,WCyFZgJ,uBA7Eb,SAAAA,EAAY9S,GAAqB,IAAAmH,EAAA,OAAA3G,OAAA4G,EAAA,EAAA5G,CAAA6G,KAAAyL,IAC/B3L,EAAA3G,OAAA8G,EAAA,EAAA9G,CAAA6G,KAAA7G,OAAA+G,EAAA,EAAA/G,CAAAsS,GAAAtL,KAAAH,KAAMrH,KApBRyH,aAA0B,CACxB1F,WAAY,CACVC,WAAW,EACXC,cAAc,EACdsH,cAAc,EACdC,YAAY,EACZC,WAAW,GAEbtH,KAAM,CACJyK,MAAO,GACPC,SAAU,GACVnB,OAAQ,GACRtJ,MAAO,GACP4N,gBAAiB,GACjBC,gBAAgB,EAChBC,oBAAoB,IAIS/I,EAMjC+F,UAAY,WACV/F,EAAKS,SAAS,SAACC,GACb,OAAOV,EAAKM,gBARiBN,EAajC4L,qBAAuB,WACrB5L,EAAKS,SAAS,SAACC,GACb,MAAO,CACL9F,WAAWvB,OAAAgN,EAAA,EAAAhN,CAAA,GACNqH,EAAM9F,WADD,CAERC,WAAY6F,EAAM9F,WAAWC,UAC7BC,cAAe4F,EAAM9F,WAAWE,mBAnBPkF,EA0BjC6J,SAAW,SAAC7O,GACVgF,EAAKS,SAAS,SAACC,GACb,MAAO,CACL9F,WAAWvB,OAAAgN,EAAA,EAAAhN,CAAA,GACNqH,EAAM9F,WADD,CAERC,WAAW,EACXC,cAAc,IAEhBE,WAlC2BgF,EAuCjC6L,8BAAgC,WAC9B5C,OAAOC,aAAa4C,WAAW,UAxCA9L,EA2CjC+L,WAAa,WACX/L,EAAK6L,gCACL7L,EAAK+F,aA7C0B/F,EAiDjCmC,iBAAmB,SAACvH,GAClBoF,EAAKS,SAAS,SAACC,GACb,MAAO,CACL9F,iBAlDJoF,EAAKU,MAAQV,EAAKM,aAFaN,wEA0D/B,OACE/G,EAAAC,EAAAC,cAAA,OAAKmC,GAAG,OACNrC,EAAAC,EAAAC,cAACoD,EAAA,EAAD,KACEtD,EAAAC,EAAAC,cAACY,EAAD,CACES,SAAU0F,KAAKQ,MACfjG,oBAAqByF,KAAK0L,qBAC1BlR,OAAQwF,KAAK6L,aAEf9S,EAAAC,EAAAC,cAAC6S,GAAD,CACExR,SAAU0F,KAAKQ,MACfmJ,SAAU3J,KAAK2J,SACf1H,iBAAkBjC,KAAKiC,4BAzFjBlI,IAAM0I,0BCLxBsJ,IAASX,OAAOrS,EAAAC,EAAAC,cAAC+S,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.df2dbb94.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { blueGrey } from \"@material-ui/core/colors\";\n\n/** Custom props for this button */\nexport interface CustomButtonProps {\n  /** id of button */\n  id?: string;\n  /** children passed */\n  children?: any;\n  /** color of button */\n  color?: \"inherit\" | \"primary\" | \"secondary\" | \"default\";\n  /** disabled button */\n  disabled?: boolean;\n  /** onClick event handler */\n  onClick?: any;\n  /** size of button */\n  size?: \"small\" | \"medium\" | \"large\";\n  /** type of button */\n  type?: \"button\" | \"reset\" | \"submit\";\n  /** variant type of button */\n  variant?: \"text\" | \"outlined\" | \"contained\";\n}\n\nconst customStyles = makeStyles({\n  /** Base button */\n  root: {\n    font: \"inherit\",\n    textDecoration: \"none\"\n  },\n  /** Default button */\n  default: {},\n  /** Primary button */\n  primary: {},\n  /** Secondary button */\n  secondary: {\n    background: blueGrey[300],\n    \"&:hover\": {\n      backgroundColor: blueGrey[500]\n    },\n    \"&:active\": {\n      backgroundColor: blueGrey[500]\n    },\n    \"&.active\": {\n      backgroundColor: blueGrey[500]\n    }\n  }\n});\n\nexport function CustomButton(props: CustomButtonProps) {\n  const classes = customStyles();\n\n  /** Apply dynamic colors given a custom button */\n  let colorStyles: string;\n  switch (props.color) {\n    case \"primary\":\n      colorStyles = classes.primary;\n      break;\n    case \"secondary\":\n      colorStyles = classes.secondary;\n      break;\n    default:\n      colorStyles = classes.default;\n      break;\n  }\n\n  return (\n    <Button\n      {...props}\n      classes={{\n        root: classes.root,\n        contained: colorStyles,\n        text: colorStyles,\n        outlined: colorStyles\n      }}\n    >\n      {props.children}\n    </Button>\n  );\n}\n","import React from \"react\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { NavLink } from \"react-router-dom\";\nimport { IMainNavBarProps } from \"./mainNavBar.model\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Menu,\n  MenuItem\n} from \"@material-ui/core\";\nimport { CustomButton } from \"../../shared/components/button.component\";\n\nimport \"./mainNavBar.scss\";\nconst customStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {},\n  title: {\n    flexGrow: 1\n  }\n}));\n\nexport default function MainNavBar(props: IMainNavBarProps) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  function handleClick(event: React.MouseEvent<HTMLButtonElement>) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  const { appState, switchRegisterLogin, logout } = props;\n  const { isAtLogin, isAtRegister } = appState.navigation;\n  const isAuth: boolean = appState.auth.token.length > 0;\n\n  const classes = customStyles();\n\n  return (\n    <AppBar position=\"static\" className={classes.root} id=\"MainNavBar\">\n      <Toolbar>\n        <IconButton\n          id=\"NavbarMenuOpenButton\"\n          edge=\"start\"\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"menu\"\n          aria-controls=\"NavbarMenu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n        >\n          <MenuIcon />\n        </IconButton>\n\n        <Menu\n          id=\"NavbarMenu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          {isAuth && (\n            <MenuItem onClick={handleClose}>\n              <NavLink to=\"/events\">\n                <CustomButton\n                  size=\"small\"\n                  type=\"button\"\n                  variant=\"text\"\n                  color=\"default\"\n                >\n                  Events\n                </CustomButton>\n              </NavLink>\n            </MenuItem>\n          )}\n          {isAuth && (\n            <MenuItem onClick={handleClose}>\n              <NavLink to=\"/bookings\">\n                <CustomButton\n                  size=\"small\"\n                  type=\"button\"\n                  variant=\"text\"\n                  color=\"default\"\n                >\n                  Bookings\n                </CustomButton>\n              </NavLink>\n            </MenuItem>\n          )}\n          {isAuth && (\n            <MenuItem onClick={handleClose}>\n              <NavLink to=\"/auth\">\n                <CustomButton\n                  onClick={logout}\n                  size=\"small\"\n                  type=\"button\"\n                  variant=\"text\"\n                  color=\"default\"\n                >\n                  Logout\n                </CustomButton>\n              </NavLink>\n            </MenuItem>\n          )}\n\n          {!isAuth && (\n            <MenuItem onClick={handleClose}>\n              <NavLink to=\"/auth\">\n                <CustomButton\n                  onClick={switchRegisterLogin}\n                  size=\"small\"\n                  type=\"button\"\n                  variant=\"text\"\n                  color=\"default\"\n                >\n                  {isAtLogin && \"Register\"}\n                  {isAtRegister && \"Login\"}\n                </CustomButton>\n              </NavLink>\n            </MenuItem>\n          )}\n        </Menu>\n\n        <Typography align=\"left\" variant=\"h5\" className={classes.title}>\n          <NavLink to=\"/\">gEvent</NavLink>\n        </Typography>\n        <nav className=\"main-navbar-wrapper\">\n          <ul className=\"main-navbar-items\">\n            {!isAuth && (\n              <NavLink className=\"auth\" to=\"/auth\">\n                <CustomButton\n                  onClick={switchRegisterLogin}\n                  size=\"small\"\n                  type=\"button\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  {isAtLogin && \"Register\"}\n                  {isAtRegister && \"Login\"}\n                </CustomButton>\n              </NavLink>\n            )}\n\n            {isAuth && (\n              <NavLink to=\"/events\">\n                <CustomButton\n                  size=\"small\"\n                  type=\"button\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Events\n                </CustomButton>\n              </NavLink>\n            )}\n            {isAuth && (\n              <NavLink to=\"/bookings\">\n                <CustomButton\n                  size=\"small\"\n                  type=\"button\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Bookings\n                </CustomButton>\n              </NavLink>\n            )}\n            {isAuth && (\n              <NavLink className=\"auth\" to=\"/auth\">\n                <CustomButton\n                  onClick={logout}\n                  size=\"small\"\n                  type=\"button\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Logout\n                </CustomButton>\n              </NavLink>\n            )}\n          </ul>\n        </nav>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from \"react\";\nimport { ToastContainer, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./toastify.scss\";\n\nexport const Toastify = () => {\n  // identifier\n  const containerId = \"main-toastify\";\n  // position of toast\n  const position = \"top-right\";\n  // in miliseconds\n  const autoCloseDelay = 1200;\n\n  return (\n    <ToastContainer\n      containerId={containerId}\n      position={position}\n      autoClose={autoCloseDelay}\n      hideProgressBar\n      newestOnTop\n      closeOnClick\n      rtl={false}\n      draggable\n      pauseOnHover\n      transition={Slide}\n    />\n  );\n};\n","/** Response type from GraphQL */\ninterface IResponse {\n  errors?: [];\n  data?: any;\n}\n\n/** FetchService comunicates with the GraphQL server */\nexport default class FetchService {\n  private static SERVER_URL: string = process.env.REACT_APP_API_BASE_URL\n    ? process.env.REACT_APP_API_BASE_URL\n    : \"\";\n\n  /** fetchServer sends a POST request to the server with the given request body and token (if needed) */\n  static async fetchServer(\n    reqBody: Object,\n    token?: string\n  ): Promise<IResponse> {\n    let headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"\"\n    };\n\n    try {\n      if (token) {\n        if (token.length < 1) {\n          throw new Error(\"token received is invalid\");\n        } else {\n          headers.Authorization = \"Bearer \" + token;\n        }\n      } else {\n        delete headers.Authorization;\n      }\n\n      const res = await fetch(FetchService.SERVER_URL, {\n        method: \"POST\",\n        body: JSON.stringify(reqBody),\n        headers\n      });\n\n      const response: IResponse = await res.json();\n\n      return response;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n}\n","import React from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nexport interface CustomSpinnerProps {\n  color?: \"primary\" | \"secondary\" | \"inherit\";\n  disableShrink?: boolean;\n  size?: number | string;\n  thickness?: number;\n  value?: number;\n  variant: \"determinate\" | \"indeterminate\" | \"static\";\n}\n\nexport function CustomSpinner(props: CustomSpinnerProps) {\n  return <CircularProgress {...props} />;\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { IBooking } from \"../../booking.model\";\nimport { IAppState } from \"../../../../app/App.model\";\n\nimport \"./bookingItem.scss\";\nimport { CustomButton } from \"../../../../shared/components/button.component\";\n\n/** event item wrapped inside a list */\nexport const BookingItem = (props: {\n  appState?: IAppState;\n  booking: IBooking;\n  cancelBooking: Function;\n  isCancelingBooking: boolean;\n}) => {\n  const { _id } = props.booking;\n  const { event } = props.booking;\n\n  const handleCancelBooking = () => {\n    if (_id) {\n      return props.cancelBooking(_id);\n    }\n  };\n\n  return (\n    <li className=\"booking-list-item\">\n      <div className=\"booking-slim-info\">\n        <Typography className=\"event-title\" variant=\"h6\" color=\"textPrimary\">\n          {event.title}\n        </Typography>\n        <div className=\"slim-wrapper\">\n          <Typography\n            className=\"event-price\"\n            variant=\"subtitle2\"\n            color=\"textSecondary\"\n          >\n            ${event.price}\n          </Typography>\n          <Typography\n            className=\"event-date\"\n            variant=\"subtitle2\"\n            color=\"textSecondary\"\n          >\n            {new Date(event.date).toDateString()}\n          </Typography>\n        </div>\n      </div>\n      <div className=\"booking-actions\">\n        <CustomButton\n          type=\"button\"\n          color=\"primary\"\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={handleCancelBooking}\n          disabled={props.isCancelingBooking}\n        >\n          Cancel\n        </CustomButton>\n      </div>\n    </li>\n  );\n};\n","import React from \"react\";\nimport { IAppState } from \"../../../app/App.model\";\nimport { IBooking } from \"../booking.model\";\nimport { BookingItem } from \"./bookingItem/bookingItem\";\n\nimport \"./bookingList.scss\";\n\n/** bookings wrapper */\nexport const BookingList = (props: {\n  bookings: IBooking[];\n  appState?: IAppState;\n  cancelBooking: Function;\n  isCancelingBooking: boolean;\n}) => {\n  const bookings = props.bookings;\n\n  return (\n    bookings && (\n      <ul className=\"booking-list\">\n        {bookings.map((booking: IBooking) => {\n          return (\n            <BookingItem\n              key={booking._id}\n              booking={booking}\n              appState={props.appState}\n              cancelBooking={props.cancelBooking}\n              isCancelingBooking={props.isCancelingBooking}\n            />\n          );\n        })}\n      </ul>\n    )\n  );\n};\n","import React from \"react\";\nimport { IBookingProps, IBookingState, IBooking } from \"./booking.model\";\nimport { INavigationState } from \"../navigation/mainNavBar.model\";\nimport FetchService from \"../../shared/fetch.service\";\nimport { toast } from \"react-toastify\";\nimport { CustomSpinner } from \"../../shared/components/spinner.component\";\nimport { Fade, Typography } from \"@material-ui/core\";\nimport { BookingList } from \"./subcomponents/bookingList\";\n\nimport \"./booking.scss\";\nimport { IEvent } from \"../event/event.model\";\n\n/** Booking component */\nclass Booking extends React.Component<IBookingProps, IBookingState> {\n  initialState: IBookingState = {\n    bookings: [],\n    isFetchingBookings: false,\n    isCancelingBooking: false\n  };\n\n  constructor(props: IBookingProps) {\n    super(props);\n\n    this.state = this.initialState;\n  }\n\n  componentDidMount() {\n    const currentNavigation: INavigationState = {\n      isAtBookings: true,\n      isAtEvents: false,\n      isAtLogin: false,\n      isAtRegister: false,\n      isAtUsers: false\n    };\n\n    this.props.updateNavigation(currentNavigation);\n\n    return this.fetchBookings();\n  }\n\n  /** finds all the bookings */\n  fetchBookings = () => {\n    this.setState(\n      (state: IBookingState) => {\n        return {\n          isFetchingBookings: true\n        };\n      },\n      async () => {\n        const wantedFields = `\n      {\n        _id\n        createdAt\n        updatedAt\n        event {\n          _id\n          title\n          price\n          date\n        }\n        user {\n          _id\n        }\n      }\n      `;\n\n        const requestBody = {\n          query: `\n        query {\n          bookings ${wantedFields}\n        }\n        `\n        };\n\n        try {\n          const token = this.props.appState.auth.token;\n          const response = await FetchService.fetchServer(requestBody, token);\n\n          if (response.errors) {\n            toast.error(\"An error occured fetching bookings\");\n\n            return;\n          }\n\n          const bookingsObj: { bookings: IBooking[] } = response.data;\n\n          if (!bookingsObj) {\n            throw new Error(\"An error occurred while fetching bookings\");\n          }\n\n          return this.setState((state: IBookingState) => {\n            return {\n              isFetchingBookings: false,\n              bookings: bookingsObj.bookings\n            };\n          });\n        } catch (error) {\n          toast.error(\"Sorry, could not fetch bookings\");\n\n          return this.setState((state: IBookingState) => {\n            return {\n              isFetchingBookings: false\n            };\n          });\n        }\n      }\n    );\n  };\n\n  /** cancels a booking */\n  cancelBooking = (bookingId: string) => {\n    this.setState(\n      (state: IBookingState) => {\n        return {\n          isCancelingBooking: true\n        };\n      },\n      async () => {\n        const wantedFields = `\n      {\n        _id\n      }\n      `;\n\n        const requestBody = {\n          query: `\n        mutation {\n          cancelBooking(bookingId: \"${bookingId}\")\n          ${wantedFields}\n        }\n        `\n        };\n\n        try {\n          const token = this.props.appState.auth.token;\n          const response = await FetchService.fetchServer(requestBody, token);\n\n          if (response.errors) {\n            toast.error(\"An error occured cancelling booking\");\n\n            return;\n          }\n\n          const eventObj: { cancelBooking: IEvent } = response.data;\n\n          if (!eventObj) {\n            throw new Error(\"An error occurred while cancelling booking\");\n          }\n\n          toast.success(\"Booking cancelled!\");\n\n          return this.setState((state: IBookingState) => {\n            const updatedBookings = this.state.bookings.filter(\n              booking => booking._id !== bookingId\n            );\n\n            return {\n              isCancelingBooking: false,\n              bookings: updatedBookings\n            };\n          });\n        } catch (error) {\n          toast.error(\"Sorry, could not cancel booking\");\n\n          return this.setState((state: IBookingState) => {\n            return {\n              isCancelingBooking: false\n            };\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    const showBookingsTransition: number = 1000;\n\n    return (\n      <div id=\"Bookings\">\n        {this.state.isFetchingBookings ? (\n          <div className=\"bookings-spinner\">\n            <CustomSpinner variant=\"indeterminate\" />\n          </div>\n        ) : (\n          <Fade\n            timeout={showBookingsTransition}\n            in={!this.state.isFetchingBookings}\n          >\n            <main className=\"bookings-list\">\n              {this.state.bookings.length <= 0 ? (\n                <Typography variant=\"overline\" color=\"textSecondary\">\n                  You have no bookings\n                </Typography>\n              ) : (\n                <BookingList\n                  bookings={this.state.bookings}\n                  cancelBooking={this.cancelBooking}\n                  isCancelingBooking={this.state.isCancelingBooking}\n                />\n              )}\n            </main>\n          </Fade>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Booking;\n","import React from \"react\";\nimport { CustomButton, CustomButtonProps } from \"./button.component\";\nimport {\n  Dialog,\n  DialogTitle,\n  Typography,\n  DialogContent,\n  DialogActions\n} from \"@material-ui/core\";\n\n/** Custom props for modal dialog */\nexport interface ICustomModalDialogProps {\n  /** open modal? */\n  isOpenModal: boolean;\n  /** on close modal handler */\n  onCloseModal: any;\n  /** modal id */\n  modalId: string;\n  /** modal title */\n  modalTitle?: string;\n  /** open button for the modal */\n  openModalButton: CustomButtonProps & {\n    /** open button title */\n    title: string;\n  };\n  /** cancel button */\n  canCancel: boolean;\n  /** cancel button props */\n  cancelModalButton?: CustomButtonProps & {\n    /** cancel button title */\n    title?: string;\n  };\n  /** confirm button */\n  canConfirm: boolean;\n  /** confirm button props*/\n  confirmModalButton?: CustomButtonProps & {\n    /** confirm button title */\n    title?: string;\n  };\n  /** content of the modal */\n  children: any;\n}\n\n/** Custom modal dialog opened by a custom button */\nexport function CustomModalDialog(props: ICustomModalDialogProps) {\n  const isOpenModal: boolean = props.isOpenModal;\n\n  return (\n    <div>\n      <CustomButton\n        {...props.openModalButton}\n        onClick={props.openModalButton.onClick}\n        disabled={isOpenModal}\n      >\n        {props.openModalButton.title}\n      </CustomButton>\n      <Dialog\n        id={props.modalId}\n        open={isOpenModal}\n        onClose={props.onCloseModal}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          <Typography align=\"left\" variant=\"inherit\">\n            {props.modalTitle}\n          </Typography>\n        </DialogTitle>\n        <DialogContent>{props.children}</DialogContent>\n        <DialogActions>\n          {props.canCancel && (\n            <CustomButton\n              {...props.cancelModalButton}\n              onClick={\n                props.cancelModalButton && props.cancelModalButton.onClick\n              }\n            >\n              {props.cancelModalButton && props.cancelModalButton.title}\n            </CustomButton>\n          )}\n          {props.canConfirm && (\n            <CustomButton\n              onClick={\n                props.confirmModalButton && props.confirmModalButton.onClick\n              }\n              {...props.confirmModalButton}\n            >\n              {props.confirmModalButton && props.confirmModalButton.title}\n            </CustomButton>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\n/** Custom props for this input */\nexport interface CustomInputTextFieldProps {\n  /** input id */\n  id?: string;\n  /** autocomplete of input */\n  autoComplete?: \"on\" | \"off\";\n  /** margin of input */\n  margin?: \"dense\" | \"none\" | \"normal\";\n  /** onChange event */\n  onChange?: any;\n  /** label associated with the input */\n  label?: string;\n  /** name of input */\n  name?: string;\n  /** type of input */\n  type?: \"email\" | \"password\" | \"text\" | string;\n  /** variant of input */\n  variant?: \"outlined\" | \"standard\" | \"filled\" | string | any;\n  /** take fullWidth */\n  fullWidth?: boolean;\n  /** max length of input */\n  maxLength?: number;\n  /** convert this into a textarea like */\n  multiline?: boolean;\n  /** number of initial rows */\n  rows?: number;\n  /** max number of rows */\n  rowsMax?: number;\n}\n\nexport function CustomInputTextField(props: CustomInputTextFieldProps) {\n  return (\n    <TextField\n      inputProps={{\n        maxLength: props.maxLength\n      }}\n      {...props}\n    />\n  );\n}\n","import React from \"react\";\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { ParsableDate } from \"@material-ui/pickers/constants/prop-types\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport interface CustomDateTimePickerProps {\n  /** label of picker */\n  label?: string;\n  /** margin of picker */\n  margin?: \"dense\" | \"none\" | \"normal\";\n  /** variant of picker */\n  inputVariant?: \"standard\" | \"outlined\" | \"filled\";\n  /** picker handler */\n  onChange: (date: ParsableDate) => void;\n  /** picker date and time */\n  value: ParsableDate;\n}\n\nexport function CustomDateTimePicker(props: CustomDateTimePickerProps) {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <DateTimePicker {...props} />\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React from \"react\";\nimport { IEvent } from \"../../../event.model\";\nimport { Typography } from \"@material-ui/core\";\nimport { IAppState } from \"../../../../../app/App.model\";\nimport { CustomModalDialog } from \"../../../../../shared/components/modal.component\";\n\nimport \"./eventItem.scss\";\n\n/** event item wrapped inside a list */\nexport const EventItem = (props: {\n  event: IEvent;\n  appState: IAppState;\n  eventBooking: {\n    isOpenEventBookingModal: boolean;\n    closeEventModal: Function;\n    openBookEventModal: Function;\n    isBookingEvent: boolean;\n    handleEventBooking: Function;\n    selectedEventForBooking: IEvent;\n  };\n}) => {\n  const { _id, price, title, date, creator } = props.event;\n  const { userId } = props.appState.auth;\n  const { selectedEventForBooking } = props.eventBooking;\n\n  const handleOpenModal = () => {\n    if (_id) {\n      return props.eventBooking.openBookEventModal(_id);\n    }\n  };\n\n  return (\n    <li className=\"event-list-item\">\n      <div className=\"event-slim-info\">\n        <Typography className=\"event-title\" variant=\"h6\" color=\"textPrimary\">\n          {title}\n        </Typography>\n        <div className=\"slim-wrapper\">\n          <Typography\n            className=\"event-price\"\n            variant=\"subtitle2\"\n            color=\"textSecondary\"\n          >\n            ${price}\n          </Typography>\n          <Typography\n            className=\"event-date\"\n            variant=\"subtitle2\"\n            color=\"textSecondary\"\n          >\n            {new Date(date).toDateString()}\n          </Typography>\n        </div>\n      </div>\n      <div className=\"event-details\">\n        {userId !== creator._id ? (\n          <div id=\"EventBookingButton\">\n            <CustomModalDialog\n              isOpenModal={props.eventBooking.isOpenEventBookingModal}\n              onCloseModal={props.eventBooking.closeEventModal}\n              modalId=\"book-event-modal\"\n              modalTitle=\"Event details\"\n              canCancel\n              canConfirm\n              openModalButton={{\n                color: \"primary\",\n                size: \"small\",\n                variant: \"outlined\",\n                type: \"button\",\n                title: \"Details\",\n                onClick: handleOpenModal\n              }}\n              cancelModalButton={{\n                color: \"primary\",\n                size: \"large\",\n                variant: \"text\",\n                type: \"button\",\n                title: \"Cancel\",\n                onClick: props.eventBooking.closeEventModal\n              }}\n              confirmModalButton={{\n                color: \"primary\",\n                size: \"large\",\n                variant: \"text\",\n                type: \"button\",\n                title: \"Book\",\n                disabled: props.eventBooking.isBookingEvent,\n                onClick: props.eventBooking.handleEventBooking\n              }}\n            >\n              {/* Modal content */}\n              <div className=\"book-event-section\">\n                <div>\n                  <Typography variant=\"h6\" color=\"primary\">\n                    Title:\n                  </Typography>\n                  <Typography variant=\"subtitle2\">\n                    {selectedEventForBooking.title}\n                  </Typography>\n                </div>\n                <div>\n                  <Typography variant=\"h6\" color=\"primary\">\n                    Created at:\n                  </Typography>\n                  <Typography variant=\"subtitle2\">\n                    {new Date(selectedEventForBooking.createdAt).toDateString()}\n                  </Typography>\n                </div>\n                <div>\n                  <Typography variant=\"h6\" color=\"primary\">\n                    Description\n                  </Typography>\n                  <Typography variant=\"subtitle2\">\n                    {selectedEventForBooking.description}\n                  </Typography>\n                </div>\n                <div>\n                  <Typography variant=\"h6\" color=\"primary\">\n                    Date:\n                  </Typography>\n                  <Typography variant=\"subtitle2\">\n                    {new Date(selectedEventForBooking.date).toDateString()}\n                  </Typography>\n                </div>\n                <div>\n                  <Typography variant=\"h6\" color=\"primary\">\n                    Price:\n                  </Typography>\n                  <Typography variant=\"subtitle2\">\n                    ${selectedEventForBooking.price}\n                  </Typography>\n                </div>\n              </div>\n            </CustomModalDialog>\n          </div>\n        ) : (\n          <Typography variant=\"overline\">You're the owner</Typography>\n        )}\n      </div>\n    </li>\n  );\n};\n","import React from \"react\";\nimport { IEvent } from \"../../event.model\";\nimport { EventItem } from \"./eventItem/eventItem\";\nimport { IAppState } from \"../../../../app/App.model\";\n\nimport \"./eventList.scss\";\n\n/** events wrapper */\nexport const EventList = (props: {\n  events: IEvent[];\n  appState: IAppState;\n  eventBookings: {\n    isOpenEventBookingModal: boolean;\n    closeEventModal: Function;\n    openBookEventModal: Function;\n    isBookingEvent: boolean;\n    handleEventBooking: Function;\n    selectedEventForBooking: IEvent;\n  };\n}) => {\n  const events = props.events;\n\n  return (\n    events && (\n      <ul className=\"event-list\">\n        {events.map((event: IEvent) => {\n          return (\n            <EventItem\n              key={event._id}\n              event={event}\n              appState={props.appState}\n              eventBooking={props.eventBookings}\n            />\n          );\n        })}\n      </ul>\n    )\n  );\n};\n","import React, { SyntheticEvent } from \"react\";\nimport { IEventProps, IEventState, IEventInput, IEvent } from \"./event.model\";\nimport { INavigationState } from \"../navigation/mainNavBar.model\";\nimport { CustomModalDialog } from \"../../shared/components/modal.component\";\nimport { CustomInputTextField } from \"../../shared/components/input.component\";\nimport { HTMLElementEvent } from \"../../shared/adapter.model\";\nimport { CustomDateTimePicker } from \"../../shared/components/date-time-picker.component\";\nimport { toast } from \"react-toastify\";\nimport { Typography, Fade } from \"@material-ui/core\";\nimport FetchService from \"../../shared/fetch.service\";\nimport { EventList } from \"./subcomponents/eventList/eventList\";\nimport { CustomSpinner } from \"../../shared/components/spinner.component\";\nimport { IBooking } from \"../booking/booking.model\";\n\nimport \"./event.scss\";\n\n/** Event component */\nclass Event extends React.Component<IEventProps, IEventState> {\n  initialState: IEventState = {\n    events: [],\n    createEventInput: {\n      date: new Date().toISOString(),\n      description: \"\",\n      price: 0,\n      title: \"\"\n    },\n    selectedEventForBooking: {\n      _id: \"\",\n      createdAt: \"\",\n      creator: {\n        _id: \"\",\n        createdAt: \"\",\n        createdEvents: [],\n        email: \"\",\n        password: \"\",\n        username: \"\"\n      },\n      date: \"\",\n      description: \"\",\n      price: 0,\n      title: \"\"\n    },\n    isOpenEventCreationModal: false,\n    isOpenEventBookingModal: false,\n    isCreatingEvent: false,\n    isBookingEvent: false,\n    isFetchingEvents: false\n  };\n\n  constructor(props: IEventProps) {\n    super(props);\n\n    this.state = this.initialState;\n  }\n\n  /** Re-starts the state */\n  initState = () => {\n    this.setState((state: IEventState) => {\n      return this.initialState;\n    });\n  };\n\n  componentDidMount() {\n    const currentNavigation: INavigationState = {\n      isAtBookings: false,\n      isAtEvents: true,\n      isAtLogin: false,\n      isAtRegister: false,\n      isAtUsers: false\n    };\n\n    this.props.updateNavigation(currentNavigation);\n\n    return this.fetchEvents();\n  }\n\n  /** finds all the events */\n  fetchEvents = () => {\n    this.setState(\n      (state: IEventState) => {\n        return {\n          isFetchingEvents: true\n        };\n      },\n      async () => {\n        const wantedFields = `\n      {\n        _id\n        title\n        price\n        date\n        createdAt\n        description\n        creator {\n          _id\n        }\n      }\n      `;\n\n        const requestBody = {\n          query: `\n        query {\n          events ${wantedFields}\n        }\n        `\n        };\n\n        try {\n          const token = this.props.appState.auth.token;\n          const response = await FetchService.fetchServer(requestBody, token);\n\n          if (response.errors) {\n            toast.error(\"An error occured fetching events\");\n\n            return;\n          }\n\n          const eventsObj: { events: IEvent[] } = response.data;\n\n          if (!eventsObj) {\n            throw new Error(\"An error occurred while fetching events\");\n          }\n\n          return this.setState((state: IEventState) => {\n            return {\n              isFetchingEvents: false,\n              events: eventsObj.events\n            };\n          });\n        } catch (error) {\n          toast.error(\"Sorry, could not fetch events\");\n\n          return this.setState((state: IEventState) => {\n            return {\n              isFetchingEvents: false\n            };\n          });\n        }\n      }\n    );\n  };\n\n  /** updates the event input */\n  onTitleInputChange = (event: SyntheticEvent) => {\n    event.persist();\n\n    const target: HTMLElementEvent = event.target;\n\n    this.setState((state: IEventState) => {\n      return {\n        createEventInput: {\n          ...state.createEventInput,\n          title: target.value\n        }\n      };\n    });\n  };\n\n  /** updates the event input */\n  onPriceInputChange = (event: SyntheticEvent) => {\n    event.persist();\n\n    const target: HTMLElementEvent = event.target;\n\n    this.setState((state: IEventState) => {\n      return {\n        createEventInput: {\n          ...state.createEventInput,\n          price: target.value\n        }\n      };\n    });\n  };\n\n  /** updates the event input */\n  onDescriptionInputChange = (event: SyntheticEvent) => {\n    event.persist();\n\n    const target: HTMLElementEvent = event.target;\n\n    this.setState((state: IEventState) => {\n      return {\n        createEventInput: {\n          ...state.createEventInput,\n          description: target.value\n        }\n      };\n    });\n  };\n\n  /** receives a parsable date from the date picker component */\n  onDateInputChange = (date: string | any) => {\n    this.setState((state: IEventState) => {\n      return {\n        createEventInput: {\n          ...state.createEventInput,\n          date: new Date(date).toISOString()\n        }\n      };\n    });\n  };\n\n  /** checks if the event creation inputs are valid */\n  isValidEventInput(userInput: IEventInput): boolean {\n    const { date, description, price, title } = userInput;\n    if (\n      date.length < 1 ||\n      description.length < 1 ||\n      price <= 0 ||\n      title.length < 1\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  /** creates a new event */\n  createEvent = async (eventInput: IEventInput) => {\n    const wantedFields = `\n    {\n      _id\n      title\n      price\n      date\n      createdAt\n      description\n      creator {\n        _id\n      }\n    }\n    `;\n\n    const requestBody = {\n      query: `\n      mutation {\n        createEvent(eventInput: {title: \"${eventInput.title}\", price: ${eventInput.price}, description: \"${eventInput.description}\", date: \"${eventInput.date}\"})\n        ${wantedFields}\n      }\n      `\n    };\n\n    try {\n      const token = this.props.appState.auth.token;\n      const response = await FetchService.fetchServer(requestBody, token);\n\n      if (response.errors) {\n        toast.error(\"An error occured\");\n\n        return this.setState((state: IEventState) => {\n          return {\n            isCreatingEvent: false\n          };\n        });\n      }\n\n      const event: { createEvent: IEvent } = response.data;\n      if (!event) {\n        throw new Error(\"An error occurred while creating event\");\n      }\n\n      toast.success(\"Event created!\");\n\n      return this.setState((state: IEventState) => {\n        const updatedEvents = [...state.events];\n\n        updatedEvents.push(event.createEvent);\n\n        return {\n          events: updatedEvents,\n          isCreatingEvent: false,\n          isOpenEventCreationModal: false,\n          createEventInput: {\n            date: new Date().toISOString(),\n            description: \"\",\n            price: 0,\n            title: \"\"\n          }\n        };\n      });\n    } catch (error) {\n      toast.error(\"Sorry, could not create event\");\n\n      throw error;\n    }\n  };\n\n  /** handles the event creation on confirm */\n  handleEventCreation = async () => {\n    this.setState(\n      (state: IEventState) => {\n        return {\n          isCreatingEvent: true\n        };\n      },\n      async () => {\n        // sanitize\n        const eventInput: IEventInput = {\n          date: this.state.createEventInput.date.trim(),\n          description: this.state.createEventInput.description.trim(),\n          price: this.state.createEventInput.price,\n          title: this.state.createEventInput.title.trim()\n        };\n\n        try {\n          const valid = this.isValidEventInput(eventInput);\n\n          if (!valid) {\n            throw new Error(\"invalid event input\");\n          }\n        } catch (error) {\n          toast.error(\"Invalid data\");\n\n          return this.setState((state: IEventState) => {\n            return {\n              isCreatingEvent: false\n            };\n          });\n        }\n\n        try {\n          await this.createEvent(eventInput);\n          return;\n        } catch (error) {\n          return this.setState((state: IEventState) => {\n            return {\n              isCreatingEvent: false\n            };\n          });\n        }\n      }\n    );\n  };\n\n  /** opens the create event modal */\n  openCreateEventModal = () => {\n    return this.setState((state: IEventState) => {\n      return {\n        isOpenEventCreationModal: true\n      };\n    });\n  };\n\n  /** handles the on close and cancel events of all modals */\n  closeEventModal = () => {\n    return this.setState((state: IEventState) => {\n      return {\n        isCreatingEvent: false,\n        isBookingEvent: false,\n        isOpenEventCreationModal: false,\n        isOpenEventBookingModal: false,\n        createEventInput: {\n          date: new Date().toISOString(),\n          description: \"\",\n          price: 0,\n          title: \"\"\n        }\n      };\n    });\n  };\n\n  /** opens the booking modal */\n  openBookEventModal = (eventId: string) => {\n    const selectedEvent = this.state.events.find(e => e._id === eventId);\n\n    if (selectedEvent) {\n      return this.setState((state: IEventState) => {\n        return {\n          isOpenEventBookingModal: true,\n          selectedEventForBooking: selectedEvent\n        };\n      });\n    } else {\n      toast.error(\"Sorry, an error occurred fetching event details\");\n      return;\n    }\n  };\n\n  /** books an event */\n  handleEventBooking = () => {\n    this.setState(\n      (state: IEventState) => {\n        return {\n          isBookingEvent: true\n        };\n      },\n      async () => {\n        const wantedFields = `\n        {\n          _id\n        }\n        `;\n\n        const requestBody = {\n          query: `\n          mutation {\n            bookEvent(eventId: \"${this.state.selectedEventForBooking._id}\")\n            ${wantedFields}\n          }\n          `\n        };\n\n        try {\n          const token = this.props.appState.auth.token;\n          const response = await FetchService.fetchServer(requestBody, token);\n\n          if (response.errors) {\n            toast.error(\"An error occured\");\n\n            return this.setState((state: IEventState) => {\n              return {\n                isBookingEvent: false\n              };\n            });\n          }\n\n          const booking: { bookEvent: IBooking } = response.data;\n          if (!booking) {\n            throw new Error(\"An error occurred while booking event\");\n          }\n\n          toast.success(\"Event booking done!\");\n\n          return this.setState((state: IEventState) => {\n            return {\n              isOpenEventBookingModal: false,\n              isBookingEvent: false\n            };\n          });\n        } catch (error) {\n          toast.error(\"Sorry, could not book event\");\n\n          this.setState((state: IEventState) => {\n            return {\n              isBookingEvent: false\n            };\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    const showEventsTransition: number = 1000;\n\n    return (\n      <div id=\"Events\">\n        {/* Event creation */}\n        <div id=\"EventCreationButton\">\n          <CustomModalDialog\n            isOpenModal={this.state.isOpenEventCreationModal}\n            onCloseModal={this.closeEventModal}\n            modalId=\"create-event-modal\"\n            modalTitle=\"Event creation\"\n            canCancel\n            canConfirm\n            openModalButton={{\n              color: \"primary\",\n              size: \"large\",\n              variant: \"contained\",\n              type: \"button\",\n              title: \"Create event\",\n              onClick: this.openCreateEventModal\n            }}\n            cancelModalButton={{\n              color: \"primary\",\n              size: \"large\",\n              variant: \"text\",\n              type: \"button\",\n              title: \"Cancel\",\n              onClick: this.closeEventModal\n            }}\n            confirmModalButton={{\n              color: \"primary\",\n              size: \"large\",\n              variant: \"text\",\n              type: \"button\",\n              title: \"Create\",\n              disabled: this.state.isCreatingEvent,\n              onClick: this.handleEventCreation\n            }}\n          >\n            <div className=\"create-event-form\">\n              <div className=\"form-control\">\n                <CustomInputTextField\n                  maxLength={40}\n                  autoComplete=\"off\"\n                  onChange={this.onTitleInputChange}\n                  label=\"Name\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"event-name\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n              </div>\n              <div className=\"form-control\">\n                <CustomInputTextField\n                  autoComplete=\"off\"\n                  onChange={this.onPriceInputChange}\n                  label=\"Price\"\n                  type=\"number\"\n                  name=\"price\"\n                  id=\"event-price\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n              </div>\n\n              <div className=\"form-control\">\n                <CustomDateTimePicker\n                  value={this.state.createEventInput.date}\n                  margin=\"normal\"\n                  label=\"Date\"\n                  inputVariant=\"outlined\"\n                  onChange={this.onDateInputChange}\n                />\n              </div>\n\n              <div className=\"form-control\">\n                <CustomInputTextField\n                  maxLength={140}\n                  autoComplete=\"off\"\n                  onChange={this.onDescriptionInputChange}\n                  label=\"Description\"\n                  type=\"text\"\n                  name=\"description\"\n                  id=\"event-description\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  multiline\n                  rows={1}\n                />\n              </div>\n            </div>\n          </CustomModalDialog>\n        </div>\n\n        {/* Events list */}\n        {this.state.isFetchingEvents ? (\n          <div className=\"events-spinner\">\n            <CustomSpinner variant=\"indeterminate\" />\n          </div>\n        ) : (\n          <Fade\n            timeout={showEventsTransition}\n            in={!this.state.isFetchingEvents}\n          >\n            <main className=\"events-list\">\n              {this.state.events.length <= 0 ? (\n                <Typography variant=\"overline\" color=\"textSecondary\">\n                  There are no events\n                </Typography>\n              ) : (\n                <EventList\n                  events={this.state.events}\n                  appState={this.props.appState}\n                  eventBookings={{\n                    closeEventModal: this.closeEventModal,\n                    handleEventBooking: this.handleEventBooking,\n                    isBookingEvent: this.state.isBookingEvent,\n                    isOpenEventBookingModal: this.state.isOpenEventBookingModal,\n                    openBookEventModal: this.openBookEventModal,\n                    selectedEventForBooking: this.state.selectedEventForBooking\n                  }}\n                />\n              )}\n            </main>\n          </Fade>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React, { FormEvent, SyntheticEvent } from \"react\";\nimport FetchService from \"../../shared/fetch.service\";\nimport { CustomButton } from \"../../shared/components/button.component\";\nimport { CustomInputTextField } from \"../../shared/components/input.component\";\nimport { IUser } from \"../user/user.model\";\nimport { IAuthProps, IAuth, IAuthInput, IAuthState } from \"./auth.model\";\nimport { toast } from \"react-toastify\";\nimport { IAppState } from \"../../app/App.model\";\nimport { HTMLElementEvent } from \"../../shared/adapter.model\";\nimport \"./auth.scss\";\nimport { CustomSpinner } from \"../../shared/components/spinner.component\";\n\n/** Authentication component */\nclass Auth extends React.Component<IAuthProps, IAuthState> {\n  initialState: IAuthState = {\n    // Input fields\n    email: \"\",\n    password: \"\",\n\n    // Auth fields\n    token: \"\",\n    tokenExpiration: \"\",\n    userId: \"\",\n    isHandlingAuth: false,\n    isLoggingWithToken: false\n  };\n\n  constructor(props: IAuthProps) {\n    super(props);\n\n    this.state = this.initialState;\n  }\n\n  getTokenFromLocalStorage = (): string | null => {\n    return window.localStorage.getItem(\"token\");\n  };\n\n  componentDidMount() {\n    return this.setState(\n      (state: IAuthState) => {\n        return {\n          isLoggingWithToken: true,\n          isHandlingAuth: true\n        };\n      },\n      async () => {\n        const token = this.getTokenFromLocalStorage();\n        if (token) {\n          try {\n            await this.loginWithToken(token);\n            return;\n          } catch (error) {\n            return this.setState((state: IAuthState) => {\n              return {\n                isLoggingWithToken: false,\n                isHandlingAuth: false\n              };\n            });\n          }\n        }\n\n        return this.setState((state: IAuthState) => {\n          return {\n            isLoggingWithToken: false,\n            isHandlingAuth: false\n          };\n        });\n      }\n    );\n  }\n\n  /** Re-starts the state */\n  initState = () => {\n    this.setState((state: IAuthState) => {\n      return this.initialState;\n    });\n  };\n\n  /** Handles events on the user email input */\n  onEmailInputChange = (event: SyntheticEvent) => {\n    event.persist();\n\n    const target: HTMLElementEvent = event.target;\n\n    this.setState((state: IAuthState) => {\n      return {\n        email: target.value\n      };\n    });\n  };\n\n  /** Handles events on the user password input */\n  onPasswordInputChange = (event: SyntheticEvent) => {\n    event.persist();\n\n    const target: HTMLElementEvent = event.target;\n\n    this.setState((state: IAuthState) => {\n      return {\n        password: target.value\n      };\n    });\n  };\n\n  /** checks if the user credentials are valid */\n  isValidUserInput(userInput: IAuthInput): boolean {\n    const { email, password } = userInput;\n    if (email.length < 1 || password.length < 1) {\n      return false;\n    }\n    return true;\n  }\n\n  /** signs up a user */\n  register = async (userInput: IAuthInput) => {\n    const wantedFields = `\n        {\n          _id\n          email\n          username\n          createdAt\n          password\n        }\n        `;\n\n    const requestBody = {\n      query: `\n          mutation {\n            registerUser(userInput: {email: \"${userInput.email}\", password: \"${userInput.password}\"}) ${wantedFields}\n          }\n          `\n    };\n\n    try {\n      const response = await FetchService.fetchServer(requestBody);\n\n      if (response.errors) {\n        toast.error(\"That email is already registered!\");\n\n        return this.setState((state: IAuthState) => {\n          return {\n            isHandlingAuth: false\n          };\n        });\n      }\n\n      const user: { registerUser: IUser } = response.data;\n      if (!user) {\n        throw new Error(\"An error occurred while signing up\");\n      }\n\n      return this.setState(\n        (state: IAuthState) => {\n          return {\n            userId: user.registerUser._id,\n            email: user.registerUser.email,\n            password: \"\"\n          };\n        },\n        async () => {\n          try {\n            await this.login(userInput);\n\n            return;\n          } catch (error) {\n            return;\n          }\n        }\n      );\n    } catch (error) {\n      toast.error(\"Sorry, could not register\");\n\n      throw error;\n    }\n  };\n\n  /** signs in a user */\n  login = async (userInput: IAuthInput) => {\n    const wantedFields = `\n        {\n          userId\n          token\n          tokenExpiration\n        }\n        `;\n\n    const requestBody = {\n      query: `\n          query {\n            login(authInput: {email: \"${userInput.email}\", password: \"${userInput.password}\"})\n            ${wantedFields}\n          }\n          `\n    };\n\n    try {\n      const response = await FetchService.fetchServer(requestBody);\n\n      if (response.errors) {\n        toast.error(\"Invalid credentials\");\n\n        return this.setState((state: IAuthState) => {\n          return {\n            isHandlingAuth: false\n          };\n        });\n      }\n\n      const user: { login: IAuth } = response.data;\n      if (!user) {\n        throw new Error(\"An error occurred while signing in\");\n      }\n\n      toast.success(\"Welcome to gEvent!\");\n\n      return this.setState(\n        (state: IAuthState) => {\n          return {\n            userId: user.login.userId,\n            email: userInput.email,\n            password: \"\",\n            token: user.login.token,\n            tokenExpiration: user.login.tokenExpiration,\n            isHandlingAuth: false\n          };\n        },\n        () => {\n          this.saveAuthTokenInLocalStorage(this.state.token);\n          this.props.authUser(this.state);\n          return;\n        }\n      );\n    } catch (error) {\n      toast.error(\"Sorry, could not login\");\n\n      throw error;\n    }\n  };\n\n  /** signs in a valid user with existing token in local storage */\n  loginWithToken = async (tokenInput: string) => {\n    const wantedFields = `\n    {\n      userId\n      email\n      tokenExpiration\n    }\n    `;\n\n    const requestBody = {\n      query: `\n      query {\n        loginWithToken(tokenInput: {token: \"${tokenInput}\"})\n        ${wantedFields}\n      }\n      `\n    };\n\n    try {\n      const response = await FetchService.fetchServer(requestBody);\n\n      if (response.errors) {\n        toast.error(\"Invalid credentials\");\n\n        return this.setState((state: IAuthState) => {\n          return {\n            isLoggingWithToken: false,\n            isHandlingAuth: false\n          };\n        });\n      }\n\n      const user: { loginWithToken: any } = response.data;\n      if (!user) {\n        throw new Error(\"An error occurred while signing in\");\n      }\n\n      toast.success(\"Welcome to gEvent!\");\n\n      return this.setState(\n        (state: IAuthState) => {\n          return {\n            userId: user.loginWithToken.userId,\n            email: user.loginWithToken.email,\n            password: \"\",\n            token: tokenInput,\n            tokenExpiration: user.loginWithToken.tokenExpiration,\n            isHandlingAuth: false,\n            isLoggingWithToken: false\n          };\n        },\n        () => {\n          this.props.authUser(this.state);\n          return;\n        }\n      );\n    } catch (error) {\n      toast.error(\"Sorry, could not login\");\n\n      throw error;\n    }\n  };\n\n  saveAuthTokenInLocalStorage = (token: string) => {\n    window.localStorage.setItem(\"token\", token);\n  };\n\n  /** register or sign in user */\n  handleAuthUser = async (event: FormEvent): Promise<void> => {\n    event.preventDefault();\n\n    return this.setState(\n      (state: IAuthState) => {\n        return {\n          isHandlingAuth: true\n        };\n      },\n      async () => {\n        // sanitize\n        const userInput: IAuthInput = {\n          email: this.state.email.trim(),\n          password: this.state.password.trim()\n        };\n\n        try {\n          const valid = this.isValidUserInput(userInput);\n\n          if (!valid) {\n            throw new Error(\"invalid user input\");\n          }\n        } catch (error) {\n          toast.error(\"Invalid credentials\");\n\n          return this.setState((state: IAuthState) => {\n            return {\n              isHandlingAuth: false\n            };\n          });\n        }\n\n        // Choose between register | login\n        const { navigation } = this.props.appState;\n        if (navigation.isAtRegister || navigation.isAtLogin) {\n          try {\n            if (navigation.isAtRegister) {\n              await this.register(userInput);\n              return;\n            } else {\n              await this.login(userInput);\n              return;\n            }\n          } catch (error) {\n            return this.setState((state: IAuthState) => {\n              return {\n                isHandlingAuth: false\n              };\n            });\n          }\n        } else {\n          // Invalid route for this handler\n          toast.error(\"An error occurred\");\n\n          return this.setState((state: IAuthState) => {\n            return {\n              isHandlingAuth: false\n            };\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    const appState: IAppState = this.props.appState;\n\n    return !this.state.isLoggingWithToken ? (\n      <form id=\"Auth\" onSubmit={this.handleAuthUser}>\n        <div className=\"form-control\">\n          <CustomInputTextField\n            autoComplete=\"on\"\n            onChange={this.onEmailInputChange}\n            label=\"Email\"\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            margin=\"dense\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <CustomInputTextField\n            autoComplete=\"on\"\n            onChange={this.onPasswordInputChange}\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            margin=\"dense\"\n          />\n        </div>\n        <div className=\"form-actions\">\n          <CustomButton\n            disabled={this.state.isHandlingAuth}\n            size=\"medium\"\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            {appState.navigation.isAtLogin && \"Login\"}\n            {appState.navigation.isAtRegister && \"Register\"}\n          </CustomButton>\n        </div>\n      </form>\n    ) : (\n      <CustomSpinner thickness={1} size={100} variant=\"indeterminate\" />\n    );\n  }\n}\n\nexport default Auth;\n","import React from \"react\";\nimport { Switch, Redirect, Route } from \"react-router-dom\";\nimport { Toastify } from \"../components/toastify/toastify\";\nimport Booking from \"../components/booking/booking\";\nimport Event from \"../components/event/event\";\nimport { IAppState } from \"./App.model\";\nimport Auth from \"../components/auth/auth\";\n\n/** Props received by main app */\ninterface IRouterProps {\n  appState: IAppState;\n  authUser: Function;\n  updateNavigation: Function;\n}\n\n/** Router state */\ninterface IRouterState {}\n\n/** Router component */\nclass Router extends React.Component<IRouterProps, IRouterState> {\n  initialState: IRouterState = {};\n\n  constructor(props: IRouterProps) {\n    super(props);\n\n    this.state = this.initialState;\n  }\n\n  render() {\n    const isAuth = this.props.appState.auth.token.length > 0;\n\n    return (\n      <main id=\"MainApp\">\n        <Toastify />\n        <Switch>\n          {isAuth && <Redirect from=\"/\" to=\"/events\" exact />}\n          {isAuth && <Redirect from=\"/auth\" to=\"/events\" exact />}\n          {!isAuth && (\n            <Route\n              path=\"/auth\"\n              render={props => (\n                <Auth\n                  {...props}\n                  appState={this.props.appState}\n                  authUser={this.props.authUser}\n                />\n              )}\n            />\n          )}\n\n          {isAuth && (\n            <React.Fragment>\n              <Route\n                path=\"/events\"\n                render={props => (\n                  <Event\n                    {...props}\n                    appState={this.props.appState}\n                    updateNavigation={this.props.updateNavigation}\n                  />\n                )}\n              />\n              <Route\n                path=\"/bookings\"\n                render={props => (\n                  <Booking\n                    {...props}\n                    appState={this.props.appState}\n                    updateNavigation={this.props.updateNavigation}\n                  />\n                )}\n              />\n            </React.Fragment>\n          )}\n\n          {isAuth && <Redirect to=\"/events\" />}\n          {!isAuth && <Redirect to=\"/auth\" />}\n        </Switch>\n      </main>\n    );\n  }\n}\n\nexport default Router;\n","import React from \"react\";\nimport MainNavbar from \"../components/navigation/mainNavBar\";\nimport { IAppState } from \"./App.model\";\nimport { IAuthState } from \"../components/auth/auth.model\";\nimport { INavigationState } from \"../components/navigation/mainNavBar.model\";\nimport { HashRouter } from \"react-router-dom\";\nimport Router from \"./Router\";\n\nimport \"./App.scss\";\n\n/** Application's root component */\nclass App extends React.Component<{}, IAppState> {\n  initialState: IAppState = {\n    navigation: {\n      isAtLogin: true,\n      isAtRegister: false,\n      isAtBookings: false,\n      isAtEvents: false,\n      isAtUsers: false\n    },\n    auth: {\n      email: \"\",\n      password: \"\",\n      userId: \"\",\n      token: \"\",\n      tokenExpiration: \"\",\n      isHandlingAuth: false,\n      isLoggingWithToken: false\n    }\n  };\n\n  constructor(props: Readonly<{}>) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  /** Re-starts the state */\n  initState = () => {\n    this.setState((state: IAppState) => {\n      return this.initialState;\n    });\n  };\n\n  /** Handles switching between register and login (updates the navigation state) */\n  switchAuthModeChange = () => {\n    this.setState((state: IAppState) => {\n      return {\n        navigation: {\n          ...state.navigation,\n          isAtLogin: !state.navigation.isAtLogin,\n          isAtRegister: !state.navigation.isAtRegister\n        }\n      };\n    });\n  };\n\n  /** Updates the app auth state */\n  authUser = (auth: IAuthState) => {\n    this.setState((state: IAppState) => {\n      return {\n        navigation: {\n          ...state.navigation,\n          isAtLogin: false,\n          isAtRegister: false\n        },\n        auth\n      };\n    });\n  };\n\n  removeAuthTokenInLocalStorage = () => {\n    window.localStorage.removeItem(\"token\");\n  };\n\n  logoutUser = () => {\n    this.removeAuthTokenInLocalStorage();\n    this.initState();\n  };\n\n  /** Updates the navigation location */\n  updateNavigation = (navigation: INavigationState) => {\n    this.setState((state: IAppState) => {\n      return {\n        navigation\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div id=\"App\">\n        <HashRouter>\n          <MainNavbar\n            appState={this.state}\n            switchRegisterLogin={this.switchAuthModeChange}\n            logout={this.logoutUser}\n          />\n          <Router\n            appState={this.state}\n            authUser={this.authUser}\n            updateNavigation={this.updateNavigation}\n          />\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\nimport \"typeface-roboto\";\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}